<?xml version="1.0" encoding="utf-8"?>
<mdscript name="RML_BuildStation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    This RML is intended for use in Master-Missions. 
    It handles checking if the player built the specified station.
    
    $feedbackvalue:
    -104 invalid position params. either all or none should be provided
    -103 $StationSpecs is incorrectly defined.
    -102 $Station is incorrectly defined.
    -101 Cue parameters not defined
    -100: Undefined failure. Defaulted to -100
    -3: Station was moved
    -2: Station changed owner
    -1: Station was destroyed
    1: supplies partially delivered 
    2: All supplies delivered -->

    <library name="BuildStation" version="2">
      <params>
        <param name="EndSignalCue"/>
        <param name="MissionCue"/>
        <param name="StartStep" default="1" comment="Briefing step to start the mission on"/>
        <param name="UpdateBriefing" default="true" comment="Update the briefing objective step when the objective is updated"/>
        <param name="DebugChance" default="0" />

        <param name="ObjectiveText"                   comment="The text for the mission objective."/>
        <param name="Station"                         comment="The relevant plot (which is an 'empty' station)"/>
        <param name="StationSpecs"                    comment="What the station should look like"/>
        <param name="PlotSector"       default="null" comment="Sector in which the station should enhabit"/>
        <param name="PlotOffset"       default="null" comment="Offset in the sector in which the station should have"/>
        <param name="PlotRange"        default="null" comment="Maximum plot distance from the location"/>
        <param name="PlotSize"         default="null" comment="x/y/z minimum plot size"/>
        <param name="Faction"                         comment="The faction to which it needs to be delivered"/>
        <param name="DefenceStation" default="false"  comment="To check for ownership claim requirement"/>

        <!--Result variables-->
        <param name="ResultTable" default="null" comment="Result keys:
               $BuiltStation = (component) The built station"/>
      </params>
      <actions>
        <set_value name="$feedbackvalue" exact="0"/>
        <create_list name="$ErrorList"/>

        <do_if value="not $EndSignalCue or not $MissionCue">
          <append_to_list name="$ErrorList" exact="-101"/>
        </do_if>
        <do_if value="not $Station">
          <append_to_list name="$ErrorList" exact="-102"/>
        </do_if>
        <do_if value="typeof $StationSpecs != datatype.table">
          <append_to_list name="$ErrorList" exact="-103" />
        </do_if>
        <do_elseif value="$StationSpecs.keys.count" max="0">
          <append_to_list name="$ErrorList" exact="-103" />
        </do_elseif>
        <do_else>
          <do_if value="$PlotSector.exists and $PlotOffset and $PlotRange and $PlotSize">
            <!--valid-->
          </do_if>
          <do_elseif value="not $PlotSector.exists and not $PlotOffset and not $PlotRange and not $PlotSize">
            <!--valid-->
          </do_elseif>
          <do_else>
            <append_to_list name="$ErrorList" exact="-104" />
          </do_else>
        </do_else>

      </actions>
      <patch sinceversion="2">
        <set_value name="$DefenceStation" exact="false"/>
      </patch>
      <cues>

        <cue name="Signal_Cleanup" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="1"/>
          </conditions>
          <actions>
            <signal_cue cue="Cleanup"/>
          </actions>
        </cue>

        <cue name="StartMission" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="0"/>
          </conditions>
          <actions>
            <signal_cue cue="UpdateBriefing"/>
          </actions>
          <cues>

            <cue name="CheckMissionAtStart">
              <actions>
                <signal_cue cue="CheckMissionStatus" comment="in case we built the station (or cheated it) and then buy the plot-license"/>
              </actions>
            </cue>

            <cue name="DebugBuildStation" instantiate="true">
              <conditions>
                <event_cue_signalled comment="manually trigger for testing TradeCompleted-cue"/>
              </conditions>
              <actions>

                <reward_player money="1000000000Cr" comment="lots of money"/>

                <create_ship name="$ship" macro="ship_arg_xl_builder_01_a_macro" zone="player.zone">
                  <owner exact="faction.player" overridenpc="true"/>
                  <pilot>
                    <select faction="faction.argon" tags="[tag.commander]"/>
                  </pilot>
                  <units>
                    <unit category="unitcategory.build" mk="2" exact="30" />
                  </units>
                  <safepos x="-450m" y="-100m" z="-1000m" />
                </create_ship>
                <add_cargo object="$ship" ware="ware.energycells" exact="9000"/>
                <add_cargo object="$ship" ware="ware.foodrations" exact="2000"/>
                <add_cargo object="$ship" ware="ware.hullparts" exact="20000"/>
                <add_cargo object="$ship" ware="ware.claytronics" exact="3000"/>

                <!-- Manually place the station using the map, assign the above ship to be the builder and then go to 
                debugmodules "construction and trade", submenu "build process" and press '9' (while hovering over station) to cheat required wares -->

              </actions>
            </cue>

            <cue name="CheckMissionStatus" instantiate="true">
              <conditions>
                <check_any>
                  <event_cue_signalled/>
                  <check_all>
                    <!--event_player_build_finished comment="check when entire station is completed"-->
                    <event_player_build_finished_components comment="check each time a module is completed"/>
                    <check_value value="event.param.buildanchor == $Station"/>
                  </check_all>
                </check_any>
              </conditions>
              <actions>
                <do_if value="event.param.name?">
                  <debug_text text="'CheckMissionStatus: module=' + event.param.name + ' Station=' + $Station.name" chance="$DebugChance"/>
                </do_if>

                <run_actions ref="md.LIB_Generic.CheckStationMatches" result="$stationmatches">
                  <param name="Station" value="$Station"/>
                  <param name="StationSpecs" value="$StationSpecs"/>
                  <!--<param name="DefenceStation" value="$DefenceStation"/>-->
                  <param name="DebugChance" value="$DebugChance"/>
                </run_actions>

                <do_if value="$stationmatches">
                  <do_if value="$ResultTable">
                    <set_value name="$ResultTable.$BuiltStation" exact="$Station"/>
                  </do_if>

                  <include_actions ref="md.LIB_Generic.TransferStationOwnership" comment="input: $Station, $Faction"/>

                  <set_value name="$feedbackvalue" exact="1" comment="station completed"/>
                  <signal_cue cue="Cleanup" />
                </do_if>
              </actions>
            </cue>

            <cue name="CheckMissionStatusFail">
              <conditions>
                <event_object_destroyed object="$Station"/>
              </conditions>
              <actions>
                <set_value name="$feedbackvalue" exact="-1"/>
                <signal_cue cue="Cleanup"/>
              </actions>
            </cue>

            <cue name="CheckMissionFailure_Ownerchange" instantiate="true">
              <conditions>
                <event_object_changed_true_owner object="$Station"/>
                <check_value value="event.param != $Faction"/>
              </conditions>
              <actions>
                <set_value name="$feedbackvalue" exact="-2"/>
                <signal_cue cue="Cleanup"/>
              </actions>
            </cue>

            <cue name="StationPosition" onfail="cancel">
              <conditions>
                <check_value value="$PlotSector.exists and $PlotOffset and $PlotRange and $PlotSize"/>
              </conditions>
              <cues>
                <cue name="StationPosition_Init">
                  <actions>
                    <signal_cue cue="StationPosition_Check"/>
                  </actions>
                </cue>

                <cue name="StationPosition_Check" instantiate="true">
                  <conditions>
                    <check_any>
                      <event_cue_signalled/>
                      <event_player_build_plot_changed station="$Station"/>
                      <event_player_paid_build_plot_changed station="$Station"/>
                    </check_any>
                  </conditions>
                  <actions>
                    <set_value name="$PlotExtents" exact="$Station.paidbuildplot.max" comment="New Plot size"/>
                    <set_value name="$PositionValid" exact="false"/>
                    <do_if value="(($PlotExtents.x * 2) ge $PlotSize.x) and (($PlotExtents.y * 2) ge $PlotSize.y) and (($PlotExtents.z * 2) ge $PlotSize.z)">
                      <do_if value="$Station.sector == $PlotSector">
                        <do_if value="$Station.distanceto.[$PlotSector, $PlotOffset]" max="$PlotRange + $PlotExtents.length">
                          <set_value name="$PositionValid" exact="true"/>
                        </do_if>
                        <do_else>
                          <debug_text text="'Station is too far away (dist=' + $Station.distanceto.[$PlotSector, $PlotOffset]+' max-range: ' + $PlotRange + ')'" chance="$DebugChance"/>
                        </do_else>
                      </do_if>
                      <do_else>
                        <debug_text text="'Station is not in requested sector'" chance="$DebugChance"/>
                      </do_else>
                    </do_if>
                    <do_else>
                      <debug_text text="'Paid plot is too small (%s,%s,%s required %s,%s,%s)'.[$PlotExtents.x, $PlotExtents.y, $PlotExtents.z, $PlotSize.x, $PlotSize.y, $PlotSize.z]" chance="$DebugChance"/>
                    </do_else>

                    <do_if value="not $PositionValid">
                      <set_value name="$feedbackvalue" exact="-3"/>
                      <signal_cue cue="Cleanup"/>
                      <cancel_cue cue="StationPosition"/>
                    </do_if>
                  </actions>
                </cue>
              </cues>
            </cue>


          </cues>
        </cue>

        <cue name="UpdateBriefing" instantiate="true" comment="Called each time a briefing-update is needed">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>

            <do_if value="$UpdateBriefing">
              <update_mission cue="$MissionCue">
                <briefing>
                  <objective step="$StartStep" action="objective.build_station" text="$ObjectiveText"/>
                </briefing>
              </update_mission>
              <set_objective cue="$MissionCue" step="$StartStep" action="objective.build_station" text="$ObjectiveText"/>
            </do_if>

          </actions>
        </cue>

        <cue name="Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO remove_objective-->

            <do_if value="$feedbackvalue" exact="0">
              <do_if value="$ErrorList.count" exact="0">
                <debug_text text="'ERROR: RML_BuildStation.Cleanup - Feedback value is 0 and no error values were set. Defaulting to -100'"/>
                <set_value name="$feedbackvalue" exact="-100"/>
              </do_if>
              <do_else>
                <set_value name="$feedbackvalue" exact="$ErrorList.{1}"/>

                <do_if value="md.$RML_Debugging">
                  <do_all exact="$ErrorList.count" counter="$Counter">
                    <do_if value="$ErrorList.{$Counter}" exact="-104">
                      <set_value name="$FeedbackText" exact="'invalid position params. either all or none should be provided'"/>
                    </do_if>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-103">
                      <set_value name="$FeedbackText" exact="'$StationSpecs is incorrectly defined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-102">
                      <set_value name="$FeedbackText" exact="'$Station parameter left undefined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-101">
                      <set_value name="$FeedbackText" exact="'Cue parameters not defined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-100">
                      <set_value name="$FeedbackText" exact="'Undefined failure. Defaulted to -100'"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$FeedbackText" exact="'Error: Unknown error value'"/>
                    </do_else>

                    <debug_text text="'Mission Error. Feedback id: ' + $ErrorList.{$Counter} + ' - ' + $FeedbackText" filter="error"/>
                  </do_all>
                </do_if>
              </do_else>
            </do_if>
            <do_else>

              <do_if value="$feedbackvalue" exact="-3">
                <set_value name="$FeedbackText" exact="{30004,6045}" comment="'Station plot no longer matches criteria'"/>
              </do_if>
              <do_elseif value="$feedbackvalue" exact="-2">
                <set_value name="$FeedbackText" exact="{30004,6026}" comment="'Station changed owner'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="-1">
                <set_value name="$FeedbackText" exact="{30004,6028}" comment="'Station was destroyed'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="1">
                <set_value name="$FeedbackText" exact="'Station Completed'"/>
              </do_elseif>

              <do_if value="$feedbackvalue" min="1">
                <debug_text text="'Mission Successful. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_if>
              <do_elseif value="@$FeedbackText">
                <set_value name="$EndSignalCue.$EndFeedbackText" exact="$FeedbackText"/>
                <debug_text text="'Mission Failed. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_elseif>
              <do_else>
                <debug_text text="'WARNING: Unhandled feedback value ' + $feedbackvalue" chance="$DebugChance"/>
              </do_else>

            </do_else>

            <set_value name="$EndSignalCue.$EndFeedbackValue" exact="$feedbackvalue"/>
            <signal_cue cue="$EndSignalCue"/>
            <cancel_cue cue="BuildStation"/>
          </actions>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>

<?xml version="1.0" encoding="utf-8"?>
<mdscript name="Setup_Gamestarts" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <cue name="X4ep1_Gamestart_Trade" module="x4ep1_gamestart_trade" version="2">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <!-- Add player-owned ships to universe -->
        <find_station name="$Factory" space="player.zone" owner="faction.player" />

        <set_value name="$BuildPlot" exact="$Factory.buildplot.max"/>
        <set_build_plot object="$Factory" paid="true" x="$BuildPlot.x" y="$BuildPlot.y" z="$BuildPlot.z"/>
        <remove_value name="$BuildPlot"/>

        <find_object_component name="$DockingBay" object="$Factory" class="class.dockingbay">
          <match_dock size="tag.dock_m" free="true" />
        </find_object_component>
        <create_ship name="$PlayerShip_Transporter" macro="ship_tel_m_trans_container_01_a_macro" dock="$DockingBay">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <loadout ref="x4ep1_gamestart_trade_playertransporter" />
          <drop ref="ship_medium_civilian" />
        </create_ship>

        <find_object_component name="$PlayerShip_Kestrel" macro="macro.ship_tel_s_scout_01_a_macro" owner="faction.player" object="$Factory" recursive="true" />
        <create_control_entity object="$PlayerShip_Kestrel" post="controlpost.aipilot">
          <select race="[race.teladi]" tags="tag.aipilot"/>
          <owner exact="faction.player"/>
        </create_control_entity>

        <!-- Add NPCs to player-owned stations -->
        <create_cue_actor cue="X4ep1_Gamestart_Trade" name="$Manager">
          <select race="race.teladi" tags="controlpost.manager.tag" />
          <owner exact="faction.player" />
          <skills>
            <skill type="management" exact="1" />
          </skills>
        </create_cue_actor>
        <assign_control_entity object="$Factory" actor="$Manager" post="controlpost.manager" transfer="true" />
        <remove_cue_actor actor="$Manager" cue="this" />
        <set_object_account object="$Factory" />

        <create_cue_actor name="$Engineer" cue="this">
          <select tags="controlpost.engineer.tag" />
          <owner exact="faction.player" />
        </create_cue_actor>
        <assign_control_entity object="$Factory" actor="$Engineer" post="controlpost.engineer" transfer="true" />
        <remove_cue_actor actor="$Engineer" cue="this" />

        <create_cue_actor name="$Defence" cue="this">
          <select tags="tag.defence" />
          <owner exact="faction.player" />
        </create_cue_actor>
        <assign_control_entity object="$Factory" actor="$Defence" post="controlpost.defence" transfer="true" />
        <remove_cue_actor actor="$Defence" cue="this" />

        <!-- add default units -->
        <set_value name="$UnitCapacity" exact="$Factory.units.maxcount" />
        <do_if value="$UnitCapacity gt 0">
          <evaluate_unit_storage object="$Factory" categories="$categories" mks="$mks" amounts="$amounts" />
          <do_all exact="$categories.count" counter="$i">
            <add_units object="$Factory" category="$categories.{$i}" mk="$mks.{$i}" exact="$amounts.{$i}" />
          </do_all>
        </do_if>

        <!-- Add blueprints for player-owned factory -->
        <!--add_blueprints object="$Factory" /-->
      </actions>
      <patch sinceversion="2" state="complete">
        <do_if value="not $Factory.paidbuildplot.exists">
          <debug_text text="'patching gamestart station build plot. Station: ' + $Factory" filter="savegame"/>
          <set_value name="$BuildPlot" exact="$Factory.buildplot.max"/>
          <set_build_plot object="$Factory" paid="true" x="$BuildPlot.x" y="$BuildPlot.y" z="$BuildPlot.z"/>
          <remove_value name="$BuildPlot"/>
        </do_if>
      </patch>
    </cue>

    <!--TODO? Known areas of space?-->
    <cue name="Test_SmallShip" module="test_smallship">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2" />
        </do_if>
      </actions>
    </cue>

    <cue name="Test_Trade" module="test_trade">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <find_cluster name="$Clusters" multiple="true" />
        <do_all exact="$Clusters.count" counter="$ClusterCounter">
          <set_value name="$Cluster" exact="$Clusters.{$ClusterCounter}" />
          <set_known object="$Cluster" known="true" />
          <find_sector name="$Sectors" space="$Cluster" multiple="true" />
          <do_all exact="$Sectors.count" counter="$SectorCounter">
            <set_value name="$Sector" exact="$Sectors.{$SectorCounter}" />
            <set_known object="$Sector" known="true" />
            <find_station name="$Stations" space="$Sector" multiple="true" />
            <do_all exact="$Stations.count" counter="$StationCounter">
              <set_value name="$Station" exact="$Stations.{$StationCounter}" />
              <set_known object="$Station" known="true" />
            </do_all>
          </do_all>
        </do_all>

        <find_zone name="$Zones" space="player.galaxy" owner="[faction.argon, faction.antigone, faction.hatikvah]" multiple="true" />

        <!-- L-Sized Liquid Transporter -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$TraderLargeLiquid" macro="ship_arg_l_trans_container_02_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="4km" y="1km" z="6km" />
        </create_ship>

        <!-- L-Sized Solid Transporter -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$TraderLargeSolid" macro="ship_arg_l_trans_container_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="5km" y="1km" z="6km" />
        </create_ship>
        <add_cargo object="$TraderLargeSolid" ware="ware.advancedelectronics" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.antimatterconverters" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.dronecomponents" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.energycells" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.engineparts" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.fieldcoils" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.hullparts" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.missilecomponents" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.shieldcomponents" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.smartchips" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.turretcomponents" min="50" max="100" />
        <add_cargo object="$TraderLargeSolid" ware="ware.weaponcomponents" min="50" max="100" />

        <!-- L-Sized Gas Miner -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$MinerLargeGas" macro="ship_arg_l_miner_liquid_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="6km" y="1km" z="6km" />
        </create_ship>

        <!-- L-Sized Solid Miner -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$MinerLargeSolid" macro="ship_arg_l_miner_solid_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="3km" y="1km" z="6km" />
        </create_ship>

        <!-- M-Sized Liquid Transporter -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$TraderMediumLiquid" macro="ship_arg_m_trans_container_02_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="4km" y="-1km" z="5km" />
        </create_ship>

        <!-- M-Sized Solid Transporter -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$TraderMediumSolidOne" macro="ship_arg_m_trans_container_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="-4km" y="-1km" z="5km" />
        </create_ship>
        <add_cargo object="$TraderMediumSolidOne" ware="ware.advancedelectronics" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.antimatterconverters" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.dronecomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.energycells" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.engineparts" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.fieldcoils" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.hullparts" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.missilecomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.shieldcomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.smartchips" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.turretcomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidOne" ware="ware.weaponcomponents" min="5" max="10" />

        <set_value name="$zone" exact="$Zones.random"/>
        <create_ship name="$TraderMediumSolidTwo" macro="ship_arg_m_trans_container_01_a_macro" zone="$zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="if $zone == player.zone then player.ship else $zone" x="-4km" y="-1km" z="5km" />
        </create_ship>
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.advancedelectronics" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.antimatterconverters" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.dronecomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.energycells" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.engineparts" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.fieldcoils" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.hullparts" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.missilecomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.shieldcomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.smartchips" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.turretcomponents" min="5" max="10" />
        <add_cargo object="$TraderMediumSolidTwo" ware="ware.weaponcomponents" min="5" max="10" />

        <!-- M-Sized Gas Miner -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$MinerMediumGas" macro="ship_arg_m_miner_liquid_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="4km" y="-2km" z="5km" />
        </create_ship>

        <!-- M-Sized Mineral Miner -->
        <set_value name="$Zone" exact="$Zones.random"/>
        <create_ship name="$MinerMediumMineral" macro="ship_arg_m_miner_solid_01_a_macro" zone="$Zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="if $Zone == player.zone then player.ship else $Zone" x="-4km" y="-1km" z="5km" />
        </create_ship>
      </actions>
    </cue>

    <cue name="Test_Trade_2" module="test_trade_2">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <find_cluster name="$Clusters" multiple="true" />
        <do_all exact="$Clusters.count" counter="$ClusterCounter">
          <set_value name="$Cluster" exact="$Clusters.{$ClusterCounter}" />
          <set_known object="$Cluster" known="true" />
          <find_sector name="$Sectors" space="$Cluster" multiple="true" />
          <do_all exact="$Sectors.count" counter="$SectorCounter">
            <set_value name="$Sector" exact="$Sectors.{$SectorCounter}" />
            <set_known object="$Sector" known="true" />
            <find_station name="$Stations" space="$Sector" multiple="true" />
            <do_all exact="$Stations.count" counter="$StationCounter">
              <set_value name="$Station" exact="$Stations.{$StationCounter}" />
              <set_known object="$Station" known="true" />
            </do_all>
          </do_all>
        </do_all>
      </actions>
    </cue>

    <cue name="Test_Platform" module="test_platform">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <set_value name="$Station" exact="player.entity.station" />
        <do_if value="$Station">
          <find_object_component name="$PlayerShip" class="class.ship" owner="faction.player" object="$Station"/>
          <do_if value="$PlayerShip and player.debug">
            <install_software object="player.ship" software="ware.software_dockmk2" />
          </do_if>

          <create_group groupname="$DockAreas" />
          <!-- Add the player's dockarea to the group first -->
          <set_value name="$Parent" exact="player.entity.parent" />
          <do_while value="$Parent.parent">
            <do_if value="$Parent.isclass.walkablemodule">
              <add_to_group groupname="$DockAreas" object="$Parent" />
              <break />
            </do_if>
            <do_else>
              <set_value name="$Parent" exact="$Parent.parent" />
            </do_else>
          </do_while>
          <find_object_component groupname="$DockAreas" object="$Station" class="class.walkablemodule" multiple="true" />
          <do_if value="$DockAreas.count">
            <set_value name="$ShipMacros" exact="[]" />
            <set_value name="$InternalShipsQuota" exact="2" comment="Number of ships to be added to internal storage before trying another dock area"/>
            <set_value name="$InternalShipsTable" exact="table[]"/>
            <!-- ship_arg_s_fighter_01_a added via gamestarts.xml -->
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_trans_container_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_scout_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_gen_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_03_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_04_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_heavyfighter_02_a_macro" comment="internal storage"/>

            <append_to_list name="$ShipMacros" exact="macro.ship_par_m_corvette_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_miner_solid_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_miner_liquid_01_a_macro" comment="internal storage"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_trans_container_02_a_macro" comment="internal storage"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_trans_container_01_a_macro" comment="internal storage"/>
            <do_all exact="$ShipMacros.count" counter="$ShipCounter">
              <set_value name="$DockingBay" exact="null" />
              <set_value name="$ShipMacro" exact="$ShipMacros.{$ShipCounter}" />
              <do_all exact="$DockAreas.count" counter="$AreaCounter">
                <set_value name="$DockArea" exact="$DockAreas.{$AreaCounter}"/>
                <find_object_component name="$DockingBay" object="$DockArea">
                  <match_dock size="$ShipMacro.docksize" free="true" storage="false" />
                </find_object_component>
                <do_if value="$DockingBay">
                  <break />
                </do_if>
                <do_elseif value="@$InternalShipsTable.{$DockArea}.{$ShipMacro.docksize} lt $InternalShipsQuota">
                  <!--Find a storage dockingbay-->
                  <find_object_component name="$DockingBay" object="$DockArea">
                    <match_dock size="$ShipMacro.docksize" free="true" storage="true" />
                  </find_object_component>
                  <do_if value="$DockingBay">
                    <do_if value="not $InternalShipsTable.{$DockArea}?">
                      <set_value name="$InternalShipsTable.{$DockArea}" exact="table[]"/>
                    </do_if>
                    <set_value name="$InternalShipsTable.{$DockArea}.{$ShipMacro.docksize}" operation="add"/>
                    <break />
                  </do_if>
                </do_elseif>
              </do_all>

              <do_if value="$DockingBay">
                <do_if value="$ShipMacro == macro.ship_arg_s_fighter_01_a_macro">
                  <create_loadout result="$loadout">
                    <macros>
                      <engine macro="engine_arg_s_combat_01_mk3_macro" path="../con_engine_01"/>
                      <engine macro="engine_arg_s_combat_01_mk3_macro" path="../con_engine_02"/>
                      <weapon macro="weapon_gen_s_gatling_01_mk2_macro" path="../con_primaryweapon_01" optional="1"/>
                      <weapon macro="weapon_gen_s_gatling_01_mk2_macro" path="../con_primaryweapon_02" optional="1"/>
                      <shield macro="shield_arg_s_standard_01_mk2_macro" path="../con_shield_01" optional="1"/>
                    </macros>
                    <virtualmacros>
                      <thruster macro="thruster_gen_s_allround_01_mk3_macro"/>
                    </virtualmacros>
                  </create_loadout>
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <loadout loadout="$loadout"/>
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                    <people>
                      <fillpercent exact="100" />
                      <person role="service" weight="100">
                        <select race="[race.argon, race.paranid, race.teladi]" tags="tag.service" />
                      </person>
                    </people>
                  </create_ship>
                </do_if>
                <do_else>
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                    <people>
                      <fillpercent exact="20" />
                      <person role="service" weight="100">
                        <select race="[race.argon, race.paranid, race.teladi]" tags="tag.service" />
                      </person>
                    </people>
                  </create_ship>
                </do_else>
                <debug_text text="'added ' + $Ship.knownname + ' to ' + (if $DockingBay.isstorage then 'storage dockingbay' else 'external dockingbay') + ' on dockarea ' + $DockingBay.walkablemodule" chance="0"/>
              </do_if>
              <do_else>
                <!--Final check to see if ship can be added to internal storage on the station-->
                <find_object_component name="$DockingBay" object="$Station">
                  <match_dock size="$ShipMacro.docksize" free="true" storage="true" />
                </find_object_component>
                <do_if value="$DockingBay">
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                    <people>
                      <fillpercent exact="20" />
                      <person role="service" weight="100">
                        <select race="[race.argon, race.paranid, race.teladi]" tags="tag.service" />
                      </person>
                    </people>
                  </create_ship>
                </do_if>
              </do_else>
              <do_any>
                <set_value name="$Ware" exact="[ware.mod_engine_forwardthrust_01_mk1, ware.mod_engine_rotationthrust_01_mk1, ware.mod_engine_strafethrust_01_mk1, ware.mod_engine_boostthrust_01_mk1, ware.mod_engine_travelthrust_01_mk1].random" />
                <set_value name="$Ware" exact="[ware.mod_shield_capacity_01_mk1, ware.mod_shield_rechargedelay_01_mk1, ware.mod_shield_rechargerate_01_mk1].random" />
                <set_value name="$Ware" exact="[ware.mod_ship_drag_01_mk1, ware.mod_ship_mass_01_mk1, ware.mod_ship_maxhull_01_mk1, ware.mod_ship_radarrange_01_mk1].random" />
                <set_value name="$Ware" exact="[ware.mod_weapon_damage_01_mk1, ware.mod_weapon_rotationspeed_01_mk1, ware.mod_weapon_cooling_01_mk1, ware.mod_weapon_mining_01_mk1].random" />
              </do_any>
              <do_if value="$Ware.isenginemod">
                <add_equipment_mods object="$Ship">
                  <engine ware="$Ware"/>
                </add_equipment_mods>
              </do_if>
              <do_elseif value="$Ware.isweaponmod">
                <find_object_component name="$Weapon" class="class.weapon" object="$Ship" multiple="false"/>
                <do_if value="$Weapon">
                  <add_equipment_mods object="$Ship">
                    <weapon ware="$Ware" macro="$Weapon.macro"/>
                  </add_equipment_mods>
                </do_if>
              </do_elseif>
              <do_elseif value="$Ware.isshipmod">
                <add_equipment_mods object="$Ship">
                  <ship ware="$Ware"/>
                </add_equipment_mods>
              </do_elseif>
              <do_elseif value="$Ware.isshieldmod">
                <add_equipment_mods object="$Ship">
                  <shield ware="$Ware"/>
                </add_equipment_mods>
              </do_elseif>
            </do_all>
          </do_if>
        </do_if>
      </actions>
    </cue>

    <cue name="Test_Platform_2" module="test_platform_2">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <set_value name="$Station" exact="player.entity.station" />
        <do_if value="$Station">
          <find_object_component name="$PlayerShip" class="class.ship" owner="faction.player" object="$Station"/>
          <do_if value="$PlayerShip and player.debug">
            <install_software object="player.ship" software="ware.software_dockmk2" />
          </do_if>

          <create_group groupname="$DockAreas" />
          <!-- Add the player's dockarea to the group first -->
          <set_value name="$Parent" exact="player.entity.parent" />
          <do_while value="$Parent.parent">
            <do_if value="$Parent.isclass.walkablemodule">
              <add_to_group groupname="$DockAreas" object="$Parent" />
              <break />
            </do_if>
            <do_else>
              <set_value name="$Parent" exact="$Parent.parent" />
            </do_else>
          </do_while>
          <find_object_component groupname="$DockAreas" object="$Station" class="class.walkablemodule" multiple="true" />
          <do_if value="$DockAreas.count">
            <set_value name="$ShipMacros" exact="[]" />
            <set_value name="$InternalShipsQuota" exact="2" comment="Number of ships to be added to internal storage before trying another dock area"/>
            <set_value name="$InternalShipsTable" exact="table[]"/>
            <!-- ship_arg_s_fighter_01_a added via gamestarts.xml -->
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_trans_container_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_scout_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_scout_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_gen_s_fighter_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_02_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_03_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_fighter_04_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_s_heavyfighter_02_a_macro" comment="internal storage"/>

            <append_to_list name="$ShipMacros" exact="macro.ship_par_m_corvette_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_par_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_tel_m_frigate_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_miner_solid_01_a_macro"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_miner_liquid_01_a_macro" comment="internal storage"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_trans_container_02_a_macro" comment="internal storage"/>
            <append_to_list name="$ShipMacros" exact="macro.ship_arg_m_trans_container_01_a_macro" comment="internal storage"/>
            <do_all exact="$ShipMacros.count" counter="$ShipCounter">
              <set_value name="$DockingBay" exact="null" />
              <set_value name="$ShipMacro" exact="$ShipMacros.{$ShipCounter}" />
              <do_all exact="$DockAreas.count" counter="$AreaCounter">
                <set_value name="$DockArea" exact="$DockAreas.{$AreaCounter}"/>
                <find_object_component name="$DockingBay" object="$DockArea">
                  <match_dock size="$ShipMacro.docksize" free="true" storage="false" />
                </find_object_component>
                <do_if value="$DockingBay">
                  <break />
                </do_if>
                <do_elseif value="@$InternalShipsTable.{$DockArea}.{$ShipMacro.docksize} lt $InternalShipsQuota">
                  <!--Find a storage dockingbay-->
                  <find_object_component name="$DockingBay" object="$DockArea">
                    <match_dock size="$ShipMacro.docksize" free="true" storage="true" />
                  </find_object_component>
                  <do_if value="$DockingBay">
                    <do_if value="not $InternalShipsTable.{$DockArea}?">
                      <set_value name="$InternalShipsTable.{$DockArea}" exact="table[]"/>
                    </do_if>
                    <set_value name="$InternalShipsTable.{$DockArea}.{$ShipMacro.docksize}" operation="add"/>
                    <break />
                  </do_if>
                </do_elseif>
              </do_all>

              <do_if value="$DockingBay">
                <do_if value="$ShipMacro == macro.ship_arg_s_fighter_01_a_macro">
                  <create_loadout result="$loadout">
                    <macros>
                      <engine macro="engine_arg_s_combat_01_mk3_macro" path="../con_engine_01"/>
                      <engine macro="engine_arg_s_combat_01_mk3_macro" path="../con_engine_02"/>
                      <weapon macro="weapon_gen_s_gatling_01_mk2_macro" path="../con_primaryweapon_01" optional="1"/>
                      <weapon macro="weapon_gen_s_gatling_01_mk2_macro" path="../con_primaryweapon_02" optional="1"/>
                      <shield macro="shield_arg_s_standard_01_mk2_macro" path="../con_shield_01" optional="1"/>
                    </macros>
                    <virtualmacros>
                      <thruster macro="thruster_gen_s_allround_01_mk3_macro"/>
                    </virtualmacros>
                  </create_loadout>
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <loadout loadout="$loadout"/>
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                    <people>
                      <fillpercent exact="100" />
                      <person role="service" weight="100">
                        <select race="[race.argon, race.paranid, race.teladi]" tags="tag.service" />
                      </person>
                    </people>
                  </create_ship>
                </do_if>
                <do_else>
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                  </create_ship>
                </do_else>
                <create_order object="$Ship" id="'Wait'" default="true">
                  <param name="allowdocked" value="false"/>
                </create_order>
                <debug_text text="'added ' + $Ship.knownname + ' to ' + (if $DockingBay.isstorage then 'storage dockingbay' else 'external dockingbay') + ' on dockarea ' + $DockingBay.walkablemodule" chance="0"/>
              </do_if>
              <do_else>
                <!--Final check to see if ship can be added to internal storage on the station-->
                <find_object_component name="$DockingBay" object="$Station">
                  <match_dock size="$ShipMacro.docksize" free="true" storage="true" />
                </find_object_component>
                <do_if value="$DockingBay">
                  <create_ship dock="$DockingBay" name="$Ship" macro="$ShipMacro">
                    <owner exact="faction.player" overridenpc="true" />
                    <pilot>
                      <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
                    </pilot>
                  </create_ship>
                  <create_order object="$Ship" id="'Wait'" default="true">
                    <param name="allowdocked" value="false"/>
                  </create_order>
                </do_if>
              </do_else>
            </do_all>
            <find_ship name="$dockedplayerships" space="$Station.zone" docked="true" checkoperational="true" hascommander="false" recursive="true" multiple="true">
              <match owner="faction.player"/>
            </find_ship>
            <do_all exact="$dockedplayerships.count" counter="$i">
              <do_if value="not $dockedplayerships.{$i}.defaultorder">
                <!-- add the same default order to the ship spawned via gamestarts.xml -->
                <create_order object="$dockedplayerships.{$i}" id="'Wait'" default="true">
                  <param name="allowdocked" value="false"/>
                </create_order>
                <set_value name="$order"/>
              </do_if>
              <do_if value="not $dockedplayerships.{$i}.pilot">
                <create_control_entity object="$dockedplayerships.{$i}" post="controlpost.aipilot">
                  <select race="race.argon" tags="tag.aipilot"/>
                  <owner exact="faction.player"/>
                </create_control_entity>
                <set_value name="$pilot"/>
              </do_if>
              <do_if value="$order? and $pilot?">
                <break/>
              </do_if>
            </do_all>
          </do_if>
        </do_if>
      </actions>
    </cue>

    <cue name="Test_Build" module="test_building">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />

      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <create_ship name="$BuilderShip" macro="ship_arg_xl_builder_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="player.ship" x="4km" y="1km" z="6km" />
        </create_ship>
        <set_object_commander object="$BuilderShip" commander="player.ship" />

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2" />
        </do_if>
      </actions>
    </cue>

    <cue name="Test_Battle" module="test_battle">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <set_faction_relation faction="faction.player" otherfaction="faction.hatikvah" value="-0.32"/>
        <set_faction_relation faction="faction.hatikvah" otherfaction="faction.player" value="-0.32"/>
        <set_faction_relation faction="faction.hatikvah" otherfaction="faction.argon" value="-0.32"/>
        <set_faction_relation faction="faction.hatikvah" otherfaction="faction.antigone" value="-0.32"/>
        <set_faction_relation faction="faction.hatikvah" otherfaction="faction.teladi" value="-0.32"/>
        <set_faction_relation faction="faction.hatikvah" otherfaction="faction.ministry" value="-0.32"/>

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2"/>
        </do_if>

        <!-- Resupplier -->
        <create_ship name="$Player_Resupplier" zone="player.zone">
          <select faction="faction.argon" tags="tag.resupplier"/>
          <owner exact="faction.player" overridenpc="true"/>
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian"/>
          <safepos object="player.ship" x="5km" y="5km" z="-5km"/>
          <rotation value="player.ship.rotation"/>
        </create_ship>
        <set_object_commander object="$Player_Resupplier" commander="player.ship"/>
        <add_cargo object="$Player_Resupplier" ware="ware.energycells" exact="9000"/>
        <add_cargo object="$Player_Resupplier" ware="ware.hullparts" exact="4500"/>
        <add_cargo object="$Player_Resupplier" ware="ware.missilecomponents" exact="6750"/>
        <add_cargo object="$Player_Resupplier" ware="ware.smartchips" exact="2250"/>
        <do_if value="$Player_Resupplier.commander">
          <create_order id="'SupplyFleet'" object="$Player_Resupplier" default="true">
            <param name="target" value="$Player_Resupplier.commander"/>
          </create_order>
        </do_if>

        <!-- For the two fleets -->
        <do_all exact="2" counter="$i">
          <!-- Player Carrier -->
          <do_if value="$i == 1">
            <create_ship name="$Carrier" zone="player.zone">
              <select faction="faction.argon" tags="tag.carrier" size="class.ship_xl"/>
              <owner exact="faction.player" overridenpc="true"/>
              <loadout>
                <level exact="1"/>
              </loadout>
              <pilot>
                <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
              </pilot>
              <drop ref="ship_large_military"/>
              <safepos object="player.ship" x="1km" y="-500m" z="4km"/>
              <rotation value="player.ship.rotation"/>
            </create_ship>
            <set_object_commander object="$Carrier" commander="player.ship"/>
            <create_order id="'Wait'" object="$Carrier" default="true"/>
            <!--<set_value name="$PlayerCarrier" exact="$Carrier"/>-->
          </do_if>
          <!-- Pirate Carrier -->
          <do_elseif value="$i == 2">
            <create_ship name="$Carrier" zone="player.zone">
              <select faction="faction.argon" tags="tag.carrier" size="class.ship_xl"/>
              <owner exact="faction.hatikvah" overridenpc="true"/>
              <loadout>
                <level exact="1"/>
              </loadout>
              <pilot actor="null"/>
              <drop ref="ship_large_military"/>
              <safepos object="player.zone" x="15202" y="1843" z="8365"/>
              <rotation yaw="-147.130951deg" pitch="0.113185deg" roll="-0.501641deg"/>
            </create_ship>
            <create_order id="'Patrol'" object="$Carrier" default="true">
              <param name="range" value="class.zone"/>
            </create_order>
            <!--<set_value name="$PirateCarrier" exact="$Carrier"/>-->
          </do_elseif>

          <find_dockingbay name="$internaldock" object="$Carrier">
            <match_dock size="tag.dock_s" free="true" storage="true"/>
          </find_dockingbay>

          <!-- carrier-based scouts -->
          <do_all min="3" max="12">
            <create_ship name="$Scout" dock="$internaldock">
              <select faction="faction.argon" tags="[tag.scout, tag.light]"/>
              <owner exact="$Carrier.owner" overridenpc="true"/>
              <loadout ref="battle_scout"/>
              <pilot>
                <select faction="faction.argon" tags="tag.aipilot"/>
              </pilot>
              <drop ref="ship_small_military"/>
            </create_ship>
            <set_object_commander object="$Scout" commander="$Carrier"/>
            <create_order id="'Escort'" object="$Scout" default="true">
              <param name="target" value="$Carrier"/>
              <param name="formation" value="formationshape.pointguard"/>
              <param name="formationparam" value="200m"/>
            </create_order>
          </do_all>

          <!--  carrier-based fighters -->
          <do_all min="9" max="36">
            <create_ship name="$Fighter" dock="$internaldock">
              <select faction="faction.argon" tags="[tag.fighter, tag.heavy]"/>
              <owner exact="$Carrier.owner" overridenpc="true"/>
              <loadout>
                <level exact="-1"/>
              </loadout>
              <pilot>
                <select faction="faction.argon" tags="tag.aipilot"/>
              </pilot>
              <drop ref="ship_small_military"/>
            </create_ship>
            <set_object_commander object="$Fighter" commander="$Carrier"/>
            <create_order id="'Escort'" object="$Fighter" default="true">
              <param name="target" value="$Carrier"/>
              <param name="formation" value="formationshape.pointguard"/>
              <param name="formationparam" value="200m"/>
            </create_order>
          </do_all>

          <!-- destroyer escorting the carrier -->
          <do_all exact="2" counter="$j">
            <create_ship name="$Destroyer" zone="player.zone">
              <select faction="faction.argon" tags="tag.destroyer" size="class.ship_l"/>
              <owner exact="$Carrier.owner" overridenpc="true"/>
              <loadout>
                <level exact="-1"/>
              </loadout>
              <pilot>
                <select faction="faction.argon" tags="tag.aipilot"/>
              </pilot>
              <drop ref="ship_large_military"/>
              <safepos object="$Carrier" x="-3km + 6km * ($j%2)" y="0m" z="2m"/>
              <rotation value="$Carrier.rotation"/>
            </create_ship>
            <!--<evaluate_ammo_storage object="$Destroyer" macros="$containedmissilemacros" amounts="$containedmissileamounts" type="missile"/>
            <do_all exact="$containedmissilemacros.count" counter="$missilecounter">
              <remove_ammo object="$Destroyer" macro="$containedmissilemacros.{$missilecounter}" amount="$containedmissileamounts.{$missilecounter}"/>
            </do_all>
            <set_object_hull object="$Destroyer" min="5" max="20"/>-->
            <set_object_commander object="$Destroyer" commander="$Carrier"/>
            <create_order id="'Escort'" object="$Destroyer" default="true">
              <param name="target" value="$Carrier"/>
              <param name="formation" value="formationshape.invvshape"/>
            </create_order>

            <!-- bomber escorting the destroyer -->
            <do_all exact="1" counter="$k">
              <create_ship name="$Bomber" zone="player.zone">
                <select faction="faction.argon" tags="tag.gunboat"/>
                <owner exact="$Carrier.owner" overridenpc="true"/>
                <loadout ref="battle_bomber"/>
                <pilot>
                  <select faction="faction.argon" tags="tag.aipilot"/>
                </pilot>
                <drop ref="ship_small_military"/>
                <safepos object="$Destroyer" x="0m" y="0m" z="-3km + 6km * ($k%2)"/>
                <rotation value="$Destroyer.rotation"/>
              </create_ship>
              <set_object_commander object="$Bomber" commander="$Destroyer"/>
              <create_order id="'Escort'" object="$Bomber" default="true">
                <param name="target" value="$Destroyer"/>
                <param name="formation" value="formationshape.dartvertical"/>
                <param name="formationparam" value="2500m"/>
              </create_order>

              <!--  carrier-based fighters -->
              <do_all exact="2">
                <create_ship name="$Fighter" zone="player.zone">
                  <select faction="faction.argon" tags="[tag.fighter, tag.heavy]"/>
                  <owner exact="$Bomber.owner" overridenpc="true"/>
                  <loadout>
                    <level exact="-1"/>
                  </loadout>
                  <pilot>
                    <select faction="faction.argon" tags="tag.aipilot"/>
                  </pilot>
                  <drop ref="ship_small_military"/>
                  <safepos object="$Bomber" max="500m"/>
                  <rotation value="$Bomber.rotation"/>
                </create_ship>
                <set_object_commander object="$Fighter" commander="$Bomber"/>
                <create_order id="'Escort'" object="$Fighter" default="true">
                  <param name="target" value="$Bomber"/>
                  <param name="formation" value="formationshape.pointguard"/>
                  <param name="formationparam" value="200m"/>
                </create_order>
              </do_all>
            </do_all>

            <!-- Frigate escorting destroyer -->
            <do_all exact="2">
              <create_ship name="$Frigate" zone="player.zone">
                <select faction="faction.argon" tags="tag.frigate"/>
                <owner exact="$Carrier.owner" overridenpc="true"/>
                <loadout ref="battle_frigate"/>
                <pilot>
                  <select faction="faction.argon" tags="tag.aipilot"/>
                </pilot>
                <drop ref="ship_small_military"/>
                <safepos object="$Destroyer" max="3km"/>
                <rotation value="$Destroyer.rotation"/>
              </create_ship>
              <set_object_commander object="$Frigate" commander="$Destroyer"/>
              <create_order id="'Escort'" object="$Frigate" default="true">
                <param name="target" value="$Destroyer"/>
                <param name="formation" value="formationshape.dartvertical"/>
                <param name="formationparam" value="2500m"/>
              </create_order>

              <!--  carrier-based fighters -->
              <do_all exact="2">
                <create_ship name="$Fighter" zone="player.zone">
                  <select faction="faction.argon" tags="[tag.fighter, tag.heavy]"/>
                  <owner exact="$Frigate.owner" overridenpc="true"/>
                  <loadout>
                    <level exact="-1"/>
                  </loadout>
                  <pilot>
                    <select faction="faction.argon" tags="tag.aipilot"/>
                  </pilot>
                  <drop ref="ship_small_military"/>
                  <safepos object="$Frigate" max="500m"/>
                  <rotation value="$Frigate.rotation"/>
                </create_ship>
                <set_object_commander object="$Fighter" commander="$Frigate"/>
                <create_order id="'Escort'" object="$Fighter" default="true">
                  <param name="target" value="$Bomber"/>
                  <param name="formation" value="formationshape.pointguard"/>
                  <param name="formationparam" value="200m"/>
                </create_order>
              </do_all>
            </do_all>
          </do_all>
        </do_all>

        <!--<create_order id="'Attack'" object="$PlayerCarrier">
          <param name="primarytarget" value="$PirateCarrier"/>
          <param name="squad_attack" value="true"/>
          <param name="allowothertargets" value="true"/>
        </create_order>
        <create_order id="'Attack'" object="$PirateCarrier">
          <param name="primarytarget" value="$PlayerCarrier"/>
          <param name="squad_attack" value="true"/>
          <param name="allowothertargets" value="true"/>
        </create_order>-->
      </actions>
    </cue>

    <cue name="Test_CapShipDocking" module="test_capshipdocking">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <create_ship name="$Carrier" macro="ship_arg_xl_carrier_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_military" />
          <people ref="argon_military_crew" />
          <safepos object="player.ship" x="4km" y="1km" z="6km" />
        </create_ship>
        <set_object_commander object="$Carrier" commander="player.ship" />
      </actions>
    </cue>

    <cue name="Test_Mining" module="test_mining">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <!-- Large Liquid Miner -->
        <create_ship name="$MinerLargeGas" macro="ship_arg_l_miner_liquid_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="player.ship" x="4km" y="1km" z="6km" />
        </create_ship>

        <!-- Large Mineral Miner -->
        <create_ship name="$MinerLargeMineral" macro="ship_arg_l_miner_solid_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian" />
          <safepos object="player.ship" x="2km" y="1km" z="6km" />
        </create_ship>

        <!-- Medium Gas Miner -->
        <create_ship name="$MinerMediumGas" macro="ship_arg_m_miner_liquid_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="player.ship" x="-2km" y="1km" z="6km" />
        </create_ship>

        <!-- Medium Mineral Miner -->
        <create_ship name="$MinerMediumMineral" macro="ship_arg_m_miner_solid_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_medium_civilian" />
          <safepos object="player.ship" x="-2km" y="1km" z="6km" />
        </create_ship>
      </actions>
    </cue>

    <cue name="Test_CapShipBridge" module="test_capshipbridge">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2" />
        </do_if>

        <create_ship name="$Resupplier" macro="ship_arg_xl_resupplier_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <people>
            <fillpercent min="40" max="50"/>
            <person role="service" weight="60">
              <select race="race.argon" tags="tag.crew"/>
            </person>
            <person role="marine" weight="20">
              <select race="race.argon" tags="tag.marine"/>
            </person>
            <person role="passenger" weight="2">
              <select race="race.argon" tags="tag.passenger"/>
            </person>
            <person role="service" weight="60">
              <select race="race.paranid" tags="tag.crew"/>
            </person>
            <person role="marine" weight="20">
              <select race="race.paranid" tags="tag.marine"/>
            </person>
            <person role="passenger" weight="2">
              <select race="race.paranid" tags="tag.passenger"/>
            </person>
            <person role="service" weight="60">
              <select race="race.teladi" tags="tag.crew"/>
            </person>
            <person role="marine" weight="20">
              <select race="race.teladi" tags="tag.marine"/>
            </person>
            <person role="passenger" weight="2">
              <select race="race.teladi" tags="tag.passenger"/>
            </person>
          </people>
          <drop ref="ship_large_civilian"/>
          <safepos object="player.ship" x="4km" y="1km" z="6km"/>
        </create_ship>
        <create_npc_template name="$engineertemplate" object="$Resupplier" macro="macro.character_argon_male_engineer_01_macro" role="entityrole.service" />
        <create_npc_template name="$pilottemplate" object="$Resupplier" macro="macro.character_argon_female_pilot_01_macro" role="entityrole.service" />
        <create_npc_template name="$pilottemplate" object="$Resupplier" macro="macro.character_argon_female_pilot_01_macro" role="entityrole.marine" />
        <create_npc_template name="$pilottemplate" object="$Resupplier" macro="macro.character_argon_female_pilot_01_macro" role="entityrole.marine" />
        <create_npc_template name="$pilottemplate" object="$Resupplier" macro="macro.character_argon_female_pilot_01_macro" role="entityrole.marine" />

        <set_object_commander object="$Resupplier" commander="player.ship" />
      </actions>
    </cue>

    <cue name="Test_NPCPresentation" module="test_npcpresentation">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart" />
      </conditions>
      <actions>
        <set_value name="$Station" exact="player.entity.station" />
        <set_value name="$DockingBay" exact="player.entity.parent" />
        <create_ship name="$Kestrel" macro="ship_tel_s_scout_01_a_macro" dock="$DockingBay">
          <owner exact="faction.player" overridenpc="true" />
          <pilot macro="character_argon_female_pilot_04_macro" />
        </create_ship>

        <find_object_component name="$DockingBay" class="class.dockingbay" object="$Station" recursive="true">
          <match_dock size="tag.dock_m" free="true" storage="false" />
        </find_object_component>
        <create_ship name="$Osprey" macro="ship_tel_m_frigate_01_a_macro" dock="$DockingBay">
          <owner exact="faction.player" overridenpc="true" />
          <pilot macro="character_argon_male_pilot_05_macro" />
          <position x="1km" y="4km" z="0" />
        </create_ship>

        <create_ship name="$Peregrine" macro="ship_tel_m_bomber_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot macro="character_argon_female_pilot_03_macro" />
          <position x="2km" y="1km" z="3km" />
        </create_ship>

        <create_ship name="$Behemoth" macro="ship_arg_l_destroyer_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <pilot macro="character_argon_male_pilot_03_macro" />
          <position x="3km" y="2km" z="2km" />
        </create_ship>
      </actions>
    </cue>

    <cue name="Testbed1" module="testbed1">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true" />
        <set_faction_known faction="faction.antigone" known="true" />
        <set_faction_known faction="faction.argon" known="true" />
        <set_faction_known faction="faction.hatikvah" known="true" />
        <set_faction_known faction="faction.holyorder" known="true" />
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true" />
        <set_faction_known faction="faction.teladi" known="true" />
        <set_faction_known faction="faction.xenon" known="true" />

        <create_ship name="$TradeShip1" macro="ship_arg_l_trans_container_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <!--TODO: Non random skills-->
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <drop ref="ship_large_civilian"/>
          <safepos object="player.ship" x="4km" y="1km" z="6km"/>
          <!--TODO: Rotation-->
        </create_ship>

        <!--<add_cargo object="$Ship2" ware="ware.energycells" exact="8000"/>-->
        <set_object_commander object="$TradeShip1" commander="player.ship"/>

        <create_ship name="$MiningShip" macro="ship_arg_l_miner_solid_01_a_macro" zone="player.zone">
          <owner exact="faction.player" overridenpc="true" />
          <loadout>
            <level exact="0.5"/>
          </loadout>
          <pilot>
            <select race="[race.argon, race.paranid, race.teladi]" tags="tag.aipilot"/>
          </pilot>
          <safepos object="player.ship" x="0m" y="-300m" z="5500m" />
          <rotation yaw="0deg" />
        </create_ship>
        <set_object_commander object="$MiningShip" commander="player.ship"/>

        <find_station space="player.zone" name="$station">
          <match_is_in_view_of vertical="150deg" horizontal="150deg" object="player.ship" space="player.zone" />
          <match_distance object="player.ship" max="10km"/>
        </find_station>
        <do_if value="not $station">
          <find_station space="player.zone" name="$station">
            <match_is_in_view_of vertical="150deg" horizontal="150deg" object="player.ship" space="player.zone" />
          </find_station>
        </do_if>
        <do_if value="$station">
          <create_ship dock="$station" name="$ship" macro="macro.ship_arg_s_scout_01_a_macro">
            <pilot>
              <select faction="faction.argon"/>
            </pilot>
            <owner overridenpc="true" exact="faction.player" />
          </create_ship>
          <create_ship dock="$station" name="$ship" macro="macro.ship_arg_s_fighter_01_a_macro">
            <pilot>
              <select faction="faction.argon"/>
            </pilot>
            <owner overridenpc="true" exact="faction.player" />
          </create_ship>
          <create_ship dock="$station" name="$ship" macro="macro.ship_arg_m_frigate_01_a_macro">
            <pilot>
              <select faction="faction.argon"/>
            </pilot>
            <owner overridenpc="true" exact="faction.player" />
          </create_ship>
        </do_if>

        <create_ship name="$ship" macro="macro.ship_arg_s_scout_01_a_macro" zone="player.zone">
          <pilot>
            <select faction="faction.argon"/>
          </pilot>
          <owner overridenpc="true" exact="faction.player" />
          <orientation refobject="player.ship" orientation="look_at"/>
          <safepos object="player.ship" x="-1km" y="-500m" z="2km"/>
        </create_ship>

        <create_ship name="$ship" macro="macro.ship_arg_s_fighter_01_a_macro" zone="player.zone">
          <pilot>
            <select faction="faction.argon"/>
          </pilot>
          <owner overridenpc="true" exact="faction.player" />
          <orientation refobject="player.ship" orientation="look_at"/>
          <safepos object="player.ship" y="-500m" z="2km"/>
        </create_ship>

      </actions>
    </cue>

    <cue name="Test_Squadron" module="test_squadron">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true"/>
        <set_faction_known faction="faction.antigone" known="true"/>
        <set_faction_known faction="faction.argon" known="true"/>
        <set_faction_known faction="faction.hatikvah" known="true"/>
        <set_faction_known faction="faction.holyorder" known="true"/>
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true"/>
        <set_faction_known faction="faction.teladi" known="true"/>
        <set_faction_known faction="faction.xenon" known="true"/>


        <!-- Frigate -->
        <create_ship name="$Frigate" zone="player.zone">
          <select faction="faction.argon" tags="tag.frigate"/>
          <owner exact="faction.player" overridenpc="true"/>
          <loadout>
            <level exact="1.0"/>
          </loadout>
          <pilot>
            <select faction="faction.argon" tags="tag.aipilot"/>
          </pilot>
          <people>
            <fillpercent exact="100"/>
            <person role="marine" weight="100">
              <select race="[race.argon, race.paranid, race.teladi]" tags="tag.marine"/>
            </person>
          </people>
          <drop ref="ship_small_military"/>
          <safepos object="player.ship" max="3km"/>
          <rotation value="player.ship.rotation"/>
        </create_ship>
        <create_order id="'Wait'" object="$Frigate" default="true"/>

        <!--  fighter escorting frigate -->
        <do_all exact="4">
          <create_ship name="$Fighter" zone="player.zone">
            <select faction="faction.argon" tags="[tag.fighter, tag.heavy]"/>
            <owner exact="$Frigate.owner" overridenpc="true"/>
            <loadout>
              <level exact="1.0"/>
            </loadout>
            <pilot>
              <select faction="faction.argon" tags="tag.aipilot"/>
            </pilot>
            <ammo>
              <macro ref="macro.missile_guided_light_mk1_macro">
                <fillpercent max="36"/>
              </macro>
              <macro ref="macro.missile_heatseeker_light_mk1_macro">
                <fillpercent max="40"/>
              </macro>
              <macro ref="macro.missile_smart_light_mk1_macro">
                <fillpercent max="20"/>
              </macro>
              <macro ref="macro.missile_swarm_light_mk1_macro">
                <fillpercent max="4"/>
              </macro>
            </ammo>
            <drop ref="ship_small_military"/>
            <safepos object="$Frigate" max="500m"/>
            <rotation value="$Frigate.rotation"/>
          </create_ship>
          <set_object_commander object="$Fighter" commander="$Frigate"/>
          <create_order id="'Escort'" object="$Fighter" default="true">
            <param name="target" value="$Frigate"/>
            <param name="formation" value="formationshape.pointguard"/>
          </create_order>
        </do_all>

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2"/>
        </do_if>
      </actions>
    </cue>

    <cue name="Test_Weapon_Test" module="test_weapontest">
      <conditions>
        <event_cue_signalled cue="md.Setup.GameStart"/>
      </conditions>
      <actions>
        <set_faction_known faction="faction.alliance" known="true"/>
        <set_faction_known faction="faction.antigone" known="true"/>
        <set_faction_known faction="faction.argon" known="true"/>
        <set_faction_known faction="faction.hatikvah" known="true"/>
        <set_faction_known faction="faction.holyorder" known="true"/>
        <set_faction_known faction="faction.ministry" known="true"/>
        <set_faction_known faction="faction.scaleplate" known="true"/>
        <set_faction_known faction="faction.teladi" known="true"/>
        <set_faction_known faction="faction.xenon" known="true"/>

        <do_if value="player.debug">
          <install_software object="player.ship" software="ware.software_dockmk2"/>
        </do_if>
      </actions>
    </cue>
  </cues>
</mdscript>

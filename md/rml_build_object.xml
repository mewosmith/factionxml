<?xml version="1.0" encoding="utf-8"?>
<mdscript name="RML_Build_Object" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    $feedbackvalue:
    -103: ChildComponentMacro is not valid
    -102: Object invalid
    -101: EndSignalCue or MissionCue not defined
    -100: Undefined failure. Defaulted to -100
    2: Object was already upgraded enough
    1: Object was built sucessfully
    -1 Object was destroyed-->

    <library name="BuildObject">
      <documentation>
        <todo>
          <item date="24/04/2013" author="Owen Lake" priority="high" description="Any objective?"/>
        </todo>
      </documentation>
      <params>
        <param name="EndSignalCue"/>
        <param name="MissionCue"/>

        <param name="StartStep" default="1" comment="Briefing step to start the mission on"/>

        <param name="FinishBuild" default="-1" comment="true = listen to event_player_build_finished
                                                        false = listen to event_player_build_started
                                                        -1 = listen to both"/>

        <!--Predefined object-->
        <param name="Object" default="null" comment="Existing object to be further expanded/upgraded. (supersedes macro and space parameters)"/>

        <!--Built object filter params-->
        <param name="Macro" default="null" comment="Macro of object to build"/>
        <param name="Space" default="null" comment="Space context for the object to be built in"/>

        <!--Extend object filter params-->
        <param name="ChildComponentMacro" default="null" comment="Macro of a component which must exist on the built or extended station"/>
        <!--TODO @Owen specify a class of module to build-->

        <param name="DebugChance" default="0" />
      </params>
      <actions>
        <set_value name="$feedbackvalue" exact="0"/>
        <create_list name="$ErrorList"/>

        <do_if value="not $EndSignalCue or not $MissionCue">
          <append_to_list name="$ErrorList" exact="-101"/>
        </do_if>

        <do_if value="@$Object and not $Object.exists">
          <append_to_list name="$ErrorList" exact="-102"/>
        </do_if>

        <do_if value="$ChildComponentMacro">
          <do_if value="typeof $ChildComponentMacro != datatype.macro">
            <append_to_list name="$ErrorList" exact="-103"/>
          </do_if>
        </do_if>

        <do_if value="$Space and $Object">
          <debug_text text="'Error: $Space and $Object provided. Setting $Space to null'" filter="error" chance="$DebugChance" />
          <set_value name="$Space" exact="null"/>
        </do_if>
        <do_if value="$Macro and $Object">
          <debug_text text="'Error: $Macro and $Object provided. Setting $Macro to null'" filter="error" chance="$DebugChance" />
          <set_value name="$Macro" exact="null"/>
        </do_if>
      </actions>
      <cues>

        <cue name="Signal_Cleanup" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="1"/>
          </conditions>
          <actions>
            <signal_cue cue="Cleanup"/>
          </actions>
        </cue>

        <cue name="StartMission" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" exact="0"/>
          </conditions>
          <actions>
            <set_value name="$Objective" exact="null"/>
            <set_value name="$Objective_Text" exact="null"/>
            <do_if value="$Object.exists">
              <set_value name="$Objective" exact="objective.extend"/>
              <do_if value="$ChildComponentMacro">
                <substitute_text text="$Objective_Text" source="{1004,1030}">
                  <replace string="'$OBJECT$'" with="$Object.knownname"/>
                  <replace string="'$MODULE$'" with="$ChildComponentMacro.name"/>
                </substitute_text>
              </do_if>
            </do_if>
            <do_else>
              <do_if value="$Macro">
                <do_if value="$Macro.isclass.station">
                  <set_value name="$Objective" exact="objective.build_station"/>
                </do_if>
                <do_else>
                  <set_value name="$Objective" exact="objective.build_ship"/>
                </do_else>
                <do_if value="$Space">
                  <substitute_text text="$Objective_Text" source="{1004,1032}">
                    <replace string="'$OBJECT$'" with="$Macro.name"/>
                    <replace string="'$AREA$'" with="$Space.knownname"/>
                  </substitute_text>
                </do_if>
                <do_else>
                  <set_value name="$Objective_Text" exact="$Macro.name"/>
                </do_else>
              </do_if>
              <do_elseif value="$ChildComponentMacro">
                <assert value="$ChildComponentMacro and $Object.exists" text="'Odd case which should not happen (but should work)'"/>
                <set_value name="$Objective" exact="objective.build_station"/>
                <set_value name="$Objective_Text" exact="$ChildComponentMacro.name"/>
              </do_elseif>
            </do_else>

            <update_mission cue="$MissionCue">
              <briefing>
                <objective step="$StartStep" action="$Objective" text="$Objective_Text"/>
              </briefing>
            </update_mission>
            <do_if value="$Object.exists">
              <set_objective cue="$MissionCue" step="$StartStep" action="$Objective" text="$Objective_Text" object="$Object" comment="TODO: Build-name"/>
            </do_if>
            <do_elseif value="$Space.isclass.zone">
              <set_objective cue="$MissionCue" step="$StartStep" action="$Objective" text="$Objective_Text" object="$Space" comment="TODO: Build-name"/>
            </do_elseif>
            <do_else>
              <set_objective cue="$MissionCue" step="$StartStep" action="$Objective" text="$Objective_Text" comment="TODO: Build-name"/>
            </do_else>
          </actions>
          <cues>
            <cue name="Object_Handling" onfail="cancel">
              <conditions>
                <check_value value="$Object"/>
              </conditions>
              <cues>
                <cue name="Object_Destroyed">
                  <conditions>
                    <event_object_destroyed object="$Object"/>
                  </conditions>
                  <actions>
                    <set_value name="$feedbackvalue" exact="-1"/>
                    <signal_cue cue="Cleanup"/>
                  </actions>
                </cue>

                <cue name="Object_Already_Has_Child" onfail="cancel">
                  <conditions>
                    <check_value value="$ChildComponentMacro"/>
                    <count_object_components object="$Object" macro="$ChildComponentMacro" min="1"/>
                  </conditions>
                  <delay exact="5s"/>
                  <actions>
                    <set_value name="$feedbackvalue" exact="2"/>
                    <signal_cue cue="Cleanup"/>
                  </actions>
                </cue>
              </cues>
            </cue>

            <cue name="Build_Event_Handler">
              <conditions>
                <check_any>
                  <check_all>
                    <event_player_build_started/>
                    <check_value value="not $FinishBuild or $FinishBuild == -1"/>
                  </check_all>
                  <check_all>
                    <event_player_build_finished/>
                    <check_value value="$FinishBuild or $FinishBuild == -1"/>
                  </check_all>
                </check_any>

                <check_any>

                  <!--Check if predefined object-->
                  <check_all>
                    <check_value value="$Object"/>
                    <check_value value="$Object.exists"/>
                    <check_value value="event.param.buildanchor" exact="$Object"/>
                  </check_all>

                  <check_all>
                    <check_value value="not $Object"/>

                    <!--Macro check Built-->
                    <check_any>
                      <check_all>
                        <check_value value="$Macro"/>
                        <check_value value="event.param.buildanchor.macro" exact="$Macro"/>
                      </check_all>
                      <check_value value="not $Macro"/>
                    </check_any>

                    <!--Location check-->
                    <check_any>
                      <check_all>
                        <check_value value="$Space.exists"/>
                        <check_value value="event.param.hascontext.{$Space}"/>
                      </check_all>
                      <check_value value="not $Space.exists"/>
                    </check_any>
                  </check_all>
                </check_any>
                
                <!--Child Component Check-->
                <check_any>
                  <check_all>
                    <check_value value="$ChildComponentMacro"/>
                    <count_object_components object="event.param.buildanchor" macro="$ChildComponentMacro" min="1"/>
                  </check_all>
                  <check_value value="not $ChildComponentMacro"/>
                </check_any>

                <!--TODO: Upgrade Stage-->
              </conditions>
              <actions>
                <set_value name="$feedbackvalue" exact="1"/>
                <signal_cue cue="Cleanup"/>
              </actions>
            </cue>
          </cues>
        </cue>

        <cue name="Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO remove_objective-->
            <do_if value="$feedbackvalue" exact="0">
              <do_if value="$ErrorList.count" exact="0">
                <debug_text text="'ERROR: BuildObject.Cleanup - Feedback value is 0 and no error values were set. Defaulting to -100'" chance="$DebugChance" />
                <set_value name="$feedbackvalue" exact="-100"/>
              </do_if>
              <do_else>
                <set_value name="$feedbackvalue" exact="$ErrorList.{1}"/>

                <do_if value="md.$RML_Debugging">
                  <do_all exact="$ErrorList.count" counter="$Counter">
                    <do_if value="$ErrorList.{$Counter}" exact="-101">
                      <set_value name="$FeedbackText" exact="'EndSignalCue or MissionCue not defined'"/>
                    </do_if>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-102">
                      <set_value name="$FeedbackText" exact="'Object invalid'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-103">
                      <set_value name="$FeedbackText" exact="'ChildComponentMacro is not valid: ' + $ChildComponentMacro"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$FeedbackText" exact="'Error: Unknown error value'"/>
                    </do_else>

                    <debug_text text="'Mission Error. Feedback id: ' + $ErrorList.{$Counter} + ' - ' + $FeedbackText" filter="error"/>
                  </do_all>
                </do_if>
              </do_else>
            </do_if>
            <do_else>

              <do_if value="$feedbackvalue" exact="1">
                <set_value name="$FeedbackText" exact="'Object was built sucessfully'"/>
              </do_if>
              <do_elseif value="$feedbackvalue" exact="2">
                <set_value name="$FeedbackText" exact="'Object was already upgraded enough'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="-1">
                <set_value name="$FeedbackText" exact="{30004,6027}" comment="'Object was destroyed'"/>
              </do_elseif>

              <do_if value="$feedbackvalue" min="1">
                <debug_text text="'Mission Successful. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText"  chance="md.$RML_Debugging * $DebugChance"/>
              </do_if>
              <do_elseif value="@$FeedbackText">
                <set_value name="$EndSignalCue.$EndFeedbackText" exact="$FeedbackText"/>
                <debug_text text="'Mission Failed. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText"  chance="md.$RML_Debugging * $DebugChance"/>
              </do_elseif>
              <do_else>
                <debug_text text="'WARNING: Unhandled feedback value ' + $feedbackvalue" chance="$DebugChance"/>
              </do_else>
              
            </do_else>

            <set_value name="$EndSignalCue.$EndFeedbackValue" exact="$feedbackvalue"/>
            <signal_cue cue="$EndSignalCue"/>
            <cancel_cue cue="BuildObject"/>
          </actions>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>

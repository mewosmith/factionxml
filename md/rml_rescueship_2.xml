<?xml version="1.0" encoding="utf-8"?>
<mdscript name="RML_RescueShip_2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
  <cues>

    <!--
    This RML is intended for use in Master-Missions. 
    It handles checking if the player rescued a ship in minefield by taking control and manually steering it out 
    - Ship does NOT have a pilot and mines are static - player needs to board the ship and fly far enough away (win-condition is "no mines nearby"). 
    
    $feedbackvalue:
    -105 $DeliveryStation not provided 
    -104 $SalvageShip not provided defined.
    -103 $Hostiles did not contain any valid targets
    -102 $Hostiles not provided defined.
    -101 Cue parameters not defined
    -100: Undefined failure. Defaulted to -100
    -3: Player stole SalvageShip 
    -2: SalvageShip changed ownership (irrelevant to whom, mission is lost)
    -1: SalvageShip was destroyed 
    1: Hostiles destroyed
    2: SalvageShip returned
    3: SalvageShip returned and all mines destroyed -->

    <library name="RescueShip">
      <params>
        <param name="EndSignalCue"/>
        <param name="MissionCue"/>
        <param name="StartStep"       default="1"     comment="Briefing step to start the mission on"/>
        <param name="UpdateBriefing"  default="true"  comment="Update the briefing objective step when the objective is updated"/>
        <param name="DebugChance"     default="0" />
        <param name="Text_LeaveMinefield"             comment="Text for the objective to leave the minefield"/>
        <param name="Text_AssumeControl"              comment="Text for the objective to assume control of the ship"/>
        <param name="Text_SpacesuitApproach"          comment="Text for the objective to fly the player spacesuit to the ship"/>
        <param name="Text_ReturnShip"                 comment="Text for the objective to fly the player spacesuit to the ship"/>
        <param name="Text_SearchDock"                 comment="Text for the objective to find the spacesuit-dock"/>
        <param name="Text_UseScanner"                 comment="Text for the objective to hack the signal near the dock"/>
        <param name="Text_Transfer_Accept"            comment="Text for the accept transfer conversation option"/>
        <param name="Text_Transfer_Decline"           comment="Text for the decline transfer conversation option"/>

        <param name="Client"                          comment="client asking for his ship"/>
        <param name="Faction"                         comment="Faction for whom we are doing this"/>
        <param name="Hostiles"                        comment="Mines in minefield"/>
        <param name="SalvageShip"                     comment="Ship to rescue"/>
        <param name="Distance"        default="2km"   comment="If SalvageShip is further away than this distance from ALL of the Mines, mission is won"/>
        <param name="DeliveryStation" default="null"/>
      </params>
      <actions>
        <set_value name="$feedbackvalue" exact="0"/>
        <create_list name="$ErrorList"/>

        <do_if value="not $EndSignalCue or not $MissionCue">
          <append_to_list name="$ErrorList" exact="-101"/>
        </do_if>
        <do_if value="not $Hostiles">
          <append_to_list name="$ErrorList" exact="-102"/>
        </do_if>
        <do_elseif value="$Hostiles.count == 0">
          <append_to_list name="$ErrorList" exact="-103"/>
        </do_elseif>
        <do_elseif value="not $SalvageShip">
          <append_to_list name="$ErrorList" exact="-104"/>
        </do_elseif>
        <do_else>
          <create_group groupname="$ObjectiveTargets"/>
          <set_value name="$HasTargetObject" exact="false"/>
          <do_all exact="$Hostiles.count" counter="$i">
            <do_if value="$Hostiles.{$i}.isrealclass.object or $Hostiles.{$i}.object.exists">
              <set_value name="$HasTargetObject" exact="true"/>
              <break/>
            </do_if>
          </do_all>

          <do_if value="not $HasTargetObject">
            <append_to_list name="$ErrorList" exact="-103"/>
          </do_if>

          <do_if value="not $SalvageShip.pilot">
            <do_if value="(not $HasTargetObject) or (not $DeliveryStation)">
              <append_to_list name="$ErrorList" exact="-105"/>
            </do_if>
          </do_if>

        </do_else>

      </actions>
      <cues>

        <cue name="Signal_Cleanup" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="1"/>
          </conditions>
          <actions>
            <signal_cue cue="Cleanup"/>
          </actions>
        </cue>

        <cue name="StartMission" onfail="cancel">
          <conditions>
            <check_value value="$ErrorList.count" min="0"/>
          </conditions>
          <actions>
            <set_value name="$SilentUpdate" exact="false"/>
            <set_value name="$HostileMacro" exact="[]" comment="static mine" />
            <set_value name="$SafeDistance" exact="false"/>
            <assert value="not $SalvageShip.pilot" text="'Ship should not have a pilot!'"/>
           
            <signal_cue cue="UpdateBriefing"/>
          </actions>
          <cues>

            <cue name="Debug_InstallScanner">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <debug_text text="'Adding software_scannerobjectmk3'"/>
                <add_inventory entity="player.entity" ware="ware.software_scannerobjectmk3" exact="1" comment="item auto-installs the scanner-software when you *enter* the spacesuit"/>
              </actions>
            </cue>

            <cue name="Debug_AllowDocking">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <actions>
                <set_object_docking_enabled object="$SalvageShip" enabled="true"/>
              </actions>
            </cue>

            <cue name="CheckMissionStatus_OwnerChange" instantiate="true">
              <conditions>
                <event_object_changed_true_owner object="$SalvageShip"/>
                <check_value value="event.param == faction.player"/>
              </conditions>
              <actions>
                <debug_text text="'Allow docking'" chance="$DebugChance"/>
                <set_object_docking_enabled object="$SalvageShip" enabled="true"/>
              </actions>
            </cue>

            
            <cue name="CheckMissionStatus_Mines" instantiate="true">
              <conditions>
                <event_object_destroyed group="$Hostiles"/>
              </conditions>
              <actions>
                <debug_text text="'Mine exploded, remaining ' + $Hostiles.count" chance="$DebugChance"/>
                <do_if value="$Hostiles.count==1">
                  <!-- if no mines remaining, you are at 'safe distance' -->
                  <set_value name="$SafeDistance" exact="true"/>
                  <signal_cue cue="UpdateBriefing"/>
                </do_if>
              </actions>
            </cue>

            <cue name="CheckMissionStatus_SafeDistance" checkinterval="10s">
              <conditions>
                <check_value value="$Hostiles.count" comment="Safe-distance-check only if there are mines remaining"/>
                <check_all exact="$Hostiles.count" counter="$i">
                  <check_value value="$Hostiles.{$i}.distanceto.{$SalvageShip} ge $Distance"/>
                </check_all>
              </conditions>
              <actions>
                <set_value name="$SafeDistance" exact="true"/>
                <signal_cue cue="UpdateBriefing"/>
              </actions>
            </cue>

            <cue name="CheckMissionStatus_DeliverToOwner" instantiate="true">
              <conditions>
                <event_object_docked object="$SalvageShip" />
              </conditions>
              <actions>
                <debug_text text="'Object ' + $SalvageShip + ' Docking at ' + event.param.knownname" chance="$DebugChance"/>
                <do_if value="event.param == $DeliveryStation">
                  <debug_text text="'SalvageShip docked'" chance="$DebugChance"/>
                  <signal_cue cue="TransferInteract"/>
                  <!--cancel_cue cue="this.static"/-->
                </do_if>
              </actions>
            </cue>

            <cue name="TransferInteract">
              <conditions>
                <event_cue_signalled/>
              </conditions>
              <delay exact="4s"/>
              <actions>
                <!-- TODO: @Owen, @Roger - Use interactive event (see "Bribe" in GM_Assassination_V2.xml) and discuss if we can contact the client through the mission manager -->
                <start_conversation actor="$Client" conversation="RescueShip_TransferOwnership"/>
              </actions>
            </cue>

            <cue name="TransferConversationStart" instantiate="true">
              <conditions>
                <event_conversation_started actor="$Client" />
              </conditions>
              <actions>
                <add_player_choice text="$Text_Transfer_Accept" position="left" section="transfer_accept" />
                <add_player_choice text="$Text_Transfer_Decline" position="right" section="transfer_decline" />
              </actions>
            </cue>
            <cue name="TransferConversationNextSection" instantiate="true">
              <conditions>
                <event_conversation_next_section actor="$Client" />
              </conditions>
              <actions>

                <do_if value="event.param == 'transfer_accept'">
                  <!-- actual transfer of ownership... -->
                  <debug_text text="'Transferring ownership of ' + $SalvageShip.knownname" chance="$DebugChance"/>

                  <!-- TODO: @Owen, @Roger - player sits in the pilot-chair while transferring ownership, and thus can command the ship (as long as he does not get up) -->

                  <set_owner object="$SalvageShip" faction="$Faction"/>
                  <run_actions ref="md.LIB_Generic.TransferShipOwnership">
                    <param name="Ship" value="$SalvageShip"/>
                    <param name="Faction" value="$Faction"/>
                  </run_actions>
                  <set_object_docking_enabled object="$SalvageShip" enabled="false"/>

                  <!--set_objective cue="$MissionCue" step="$StartStep + 4" action="objective.disembark" text="'Leave ship'"/-->

                  <do_if value="$Hostiles.count == 0">
                    <set_value name="$feedbackvalue" exact="3" comment="success (SalvageShip delivered + destroyed all mines)"/>
                  </do_if>
                  <do_else>
                    <set_value name="$feedbackvalue" exact="2" comment="success (SalvageShip delivered)"/>
                  </do_else>

                  <signal_cue cue="Cleanup"/>
                </do_if>
                <do_else>
                  <!-- Don't transfer ownership, player steals ship -->
                  <set_object_docking_enabled object="$SalvageShip" enabled="true" comment="player stole ship, unlock docking"/>

                  <!-- reputation drop -->
                  <set_value name="$Level"   exact="faction.player.relation.{$Faction.relationto.{faction.player}}.uivalue"/>
                  <set_value name="$DropLevels" exact="5"/>
                  <include_actions ref="md.LIB_Generic.CalculateReputationDrop" comment="input: $Level, $DropLevels output: $ReputationDrop"/>
                  <add_faction_relation faction="faction.player" otherfaction="$Faction" value="-$ReputationDrop" reason="relationchangereason.missionfailed"/>
                  
                  <do_any>
                    <speak actor="$Client" line="5033" comment="We'll remember that." />
                    <speak actor="$Client" line="5034" comment="You better watch your back." />
                  </do_any>
                  <set_value name="$feedbackvalue" exact="-3" comment="failure (SalvageShip stolen by player)"/>
                  <signal_cue cue="Cleanup"/>
                </do_else>
              </actions>
            </cue>

            <cue name="CheckMissionFailure_destroyed" instantiate="true">
              <conditions>
                <event_object_destroyed object="$SalvageShip"/>
              </conditions>
              <actions>
                <set_value name="$feedbackvalue" exact="-1" comment="fail because SalvageShip was destroyed"/>
                <signal_cue cue="Cleanup"/>
              </actions>
            </cue>

          </cues>
        </cue>

        <cue name="ObjectiveTicker" comment="check conditions which need to trigger an UpdateBriefing">
          <actions>
            <set_value name="$LastInRange" exact="(player.sector == $SalvageShip.sector) and $SalvageShip.bboxdistanceto.{player.entity} lt 10km"/>
            <set_value name="$LastInSpaceSuit" exact="@player.controlled.isclass.spacesuit"/>
          </actions>
          <cues>
            <cue name="ObjectiveTickerRefresh" checkinterval="5s" instantiate="true">
              <actions>
                <set_value name="$DoUpdateBriefing" exact="false"/>
                <set_value name="$SilentUpdate" exact="false"/>

                <!-- enter/leave distance check-->
                <set_value name="$NowInRange" exact="(player.sector == $SalvageShip.sector) and $SalvageShip.bboxdistanceto.{player.entity} lt 10km"/>
                <do_if value="not $LastInRange and $NowInRange">
                  <!-- special case for destruction of seeker-mines, first time non-silent update -->
                  <set_value name="$DoUpdateBriefing" exact="true"/>
                </do_if>
                <do_elseif value="$LastInRange and not $NowInRange">
                  <set_value name="$DoUpdateBriefing" exact="true"/>
                </do_elseif>
                <do_elseif value="$NowInRange" comment="was in range and still is in range">
                </do_elseif>
                <set_value name="$LastInRange" exact="$NowInRange"/>

                <!-- enter/leave spacesuit check -->
                <set_value name="$NowInSpaceSuit" exact="@player.controlled.isclass.spacesuit"/>
                <do_if value="$NowInSpaceSuit != $LastInSpaceSuit">
                  <set_value name="$DoUpdateBriefing" exact="true"/>
                </do_if>
                <set_value name="$LastInSpaceSuit" exact="$NowInSpaceSuit"/>

                <!-- distance checks (close to ship / close to leak) -->
                <do_if value="player.sector == $SalvageShip.sector">
                  <set_value name="$CloseToLeakOld" exact="@$CloseToLeak"/>
                  <do_if value="$SalvageShipSpacesuitDock.bboxdistanceto.{player.entity} le 5m">
                    <set_value name="$CloseToLeak" exact="true"/>
                  </do_if>
                  <do_else>
                    <set_value name="$CloseToLeak" exact="false"/>
                  </do_else>
                  <do_if value="$CloseToLeakOld != $CloseToLeak">
                    <set_value name="$DoUpdateBriefing" exact="true"/>
                  </do_if>

                  <set_value name="$CloseToShipOld" exact="@$CloseToShip"/>
                  <do_if value="$SalvageShip.bboxdistanceto.{player.entity} le 300m">
                    <set_value name="$CloseToShip" exact="true"/>
                  </do_if>
                  <do_else>
                    <set_value name="$CloseToShip" exact="false"/>
                  </do_else>
                  <do_if value="$CloseToShipOld != $CloseToShip">
                    <set_value name="$DoUpdateBriefing" exact="true"/>
                  </do_if>

                </do_if>

                <do_if value="$SalvageShip.isplayerowned and not @$RepeatLock">
                  <set_value name="$RepeatLock"/>
                  <set_value name="$DoUpdateBriefing" exact="true"/>
                </do_if> 
                
                <!-- update briefing, if necessary -->
                <do_if value="$DoUpdateBriefing">
                  <signal_cue cue="UpdateBriefing"/>
                </do_if>

              </actions>
            </cue>
          </cues>
        </cue>

        <cue name="UpdateBriefing" instantiate="true" comment="Called each time a briefing-update is needed">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>

            <!-- Static-mines case (salvageship without pilot) -->
            <!--debug_text text="'UpdateBriefing (closeby) static-mines'" chance="$DebugChance"/-->
            <do_if value="$UpdateBriefing">
              <update_mission cue="$MissionCue">
                <briefing>
                  <objective step="$StartStep"      action="objective.flyto"    text="$SalvageShip.knownname"     object="$SalvageShip" comment="Initial Fly-To"/>
                  <objective step="$StartStep + 1"  action="objective.secure"   text="$SalvageShip.knownname"     object="$SalvageShip" comment="Take over ship"/>
                  <objective step="$StartStep + 2"  action="objective.flyto"    text="$Text_LeaveMinefield"       object="$SalvageShip" comment="Manouevre out of minefield"/>
                  <objective step="$StartStep + 3"  action="objective.deliver"  text="$SalvageShip.knownname"     comment="Deliver Ship to Client"/>
                </briefing>
              </update_mission>
            </do_if>

            <!--param name="Text_UseScanner"                 comment="Text for the objective to hack the signal near the dock"/-->
            <find_dockingbay name="$SalvageShipSpacesuitDock" object="$SalvageShip" comment="find spacesuit dock">
              <match_dock size="tag.dock_xs"/>
            </find_dockingbay>

            <!-- ship was transferred to rightful owner, player needs to disembark -->
            <do_if value="$SalvageShip.owner == $Faction">
              <set_objective cue="$MissionCue" step="$StartStep + 4" action="objective.disembark" text="'Leave ship'"/>
            </do_if>
            <!-- player is ON the salvageship AND is owner of it -->
            <do_elseif value="player.ship == $SalvageShip and $SalvageShip.owner == faction.player">
              <!-- player clear of the minefield -->
              <do_if value="$SafeDistance == true">
                <set_objective cue="$MissionCue" step="$StartStep + 3" action="objective.deliver" text="$SalvageShip" object="$DeliveryStation" endtime="player.age + 3600s"/>
              </do_if>
              <do_else>
                <!-- player needs to manouevre out of the minefield -->
                <set_objective cue="$MissionCue" step="$StartStep + 2" action="objective.flyto" text="$Text_LeaveMinefield" comment="Manouevre out of minefield" silent="$SilentUpdate"/>
              </do_else>
            </do_elseif>
            <!-- player is far away from salvageship -->
            <do_elseif value="$SalvageShip.sector != player.sector or $SalvageShip.bboxdistanceto.{player.entity} ge 6km">
              <set_objective cue="$MissionCue" step="$StartStep" action="objective.flyto" text="$SalvageShip.knownname" object="$SalvageShip" comment="Initial Fly-To"/>
            </do_elseif>
            <!-- player is in the spacesuit AND closeby to salvageship -->
            <do_elseif value="@player.controlled.isclass.spacesuit and $SalvageShip.bboxdistanceto.{player.entity} le 1km">
              <!-- player claimed the salvageship -->
              <do_if value="$SalvageShip.owner == faction.player">
                <set_objective cue="$MissionCue" step="$StartStep + 1" action="objective.secure" text="$SalvageShip.knownname" object="$SalvageShip" comment="Assume Control(Take over ship)"/>
              </do_if>
              <!-- player needs to use the spacesuit and hack the signalleak -->
              <do_elseif value="@player.controlled.isclass.spacesuit and $CloseToLeak">
                <set_objective cue="$MissionCue" action="objective.secure" text="$Text_UseScanner" object="$SalvageShip" comment="Use spacesuit hacker to decrypt"/>
              </do_elseif>
              <do_elseif value="@player.controlled.isclass.spacesuit and $CloseToShip">
                <set_objective cue="$MissionCue" action="objective.secure" text="$Text_SearchDock" object="$SalvageShip" comment="Find the spacesuit dock"/>
              </do_elseif>
              <do_else>
                  <set_objective cue="$MissionCue" action="objective.secure" text="$Text_SpacesuitApproach" object="$SalvageShip" comment="approach with spacesuit"/>
              </do_else>
            </do_elseif>
            <!-- player is NOT in the spacesuit -->
            <do_else>
              <set_objective cue="$MissionCue" action="objective.secure" text="readtext.{1010}.{34}" object="$SalvageShip" comment="Use spacesuit (Take over ship)"/>
            </do_else>

          </actions>
        </cue>

        <cue name="Cleanup">
          <conditions>
            <event_cue_signalled/>
          </conditions>
          <actions>
            <!--TODO remove_objective-->

            <do_if value="$feedbackvalue" exact="0">
              <do_if value="$ErrorList.count" exact="0">
                <debug_text text="'ERROR: RML_RescueShip_2.Cleanup - Feedback value is 0 and no error values were set. Defaulting to -100'"/>
                <set_value name="$feedbackvalue" exact="-100"/>
              </do_if>
              <do_else>
                <set_value name="$feedbackvalue" exact="$ErrorList.{1}"/>

                <do_if value="md.$RML_Debugging">
                  <do_all exact="$ErrorList.count" counter="$Counter">
                    <do_if value="$ErrorList.{$Counter}" exact="-105">
                      <set_value name="$FeedbackText" exact="'$DeliveryStation left Undefined'"/>
                    </do_if>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-104">
                      <set_value name="$FeedbackText" exact="'$SalvageShip left Undefined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-103">
                      <set_value name="$FeedbackText" exact="'$Hostiles did not contain any valid targets'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-102">
                      <set_value name="$FeedbackText" exact="'$Hostiles parameter left undefined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-101">
                      <set_value name="$FeedbackText" exact="'Cue parameters not defined'"/>
                    </do_elseif>
                    <do_elseif value="$ErrorList.{$Counter}" exact="-100">
                      <set_value name="$FeedbackText" exact="'Undefined failure. Defaulted to -100'"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$FeedbackText" exact="'Error: Unknown error value'"/>
                    </do_else>

                    <debug_text text="'Mission Error. Feedback id: ' + $ErrorList.{$Counter} + ' - ' + $FeedbackText" filter="error"/>
                  </do_all>
                </do_if>
              </do_else>
            </do_if>
            <do_else>

              <do_if value="$feedbackvalue" exact="-3">
                <set_value name="$FeedbackText" exact="{30004,6033}" comment="'failed - player stole ship'"/>
              </do_if>
              <do_elseif value="$feedbackvalue" exact="-2">
                <set_value name="$FeedbackText" exact="{30004,6026}" comment="'failed - object changed ownership'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="-1">
                <set_value name="$FeedbackText" exact="{30004,6020}" comment="'failed - object destroyed'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="1">
                <set_value name="$FeedbackText" exact="'success - mines destroyed'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="2">
                <set_value name="$FeedbackText" exact="'success - SalvageShip returned'"/>
              </do_elseif>
              <do_elseif value="$feedbackvalue" exact="3">
                <set_value name="$FeedbackText" exact="'success - SalvageShip returned and destroyed all mines'"/>
              </do_elseif>

              <do_if value="$feedbackvalue" min="1">
                <debug_text text="'Mission Successful. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_if>
              <do_elseif value="@$FeedbackText">
                <set_value name="$EndSignalCue.$EndFeedbackText" exact="$FeedbackText"/>
                <debug_text text="'Mission Failed. Feedback id: ' + $feedbackvalue + ' - ' + $FeedbackText" chance="md.$RML_Debugging * $DebugChance"/>
              </do_elseif>
              <do_else>
                <debug_text text="'WARNING: Unhandled feedback value ' + $feedbackvalue" chance="$DebugChance"/>
              </do_else>

            </do_else>

            <set_value name="$EndSignalCue.$EndFeedbackValue" exact="$feedbackvalue"/>
            <signal_cue cue="$EndSignalCue"/>
            <cancel_cue cue="RescueShip"/>
          </actions>
        </cue>
      </cues>
    </library>
  </cues>
</mdscript>

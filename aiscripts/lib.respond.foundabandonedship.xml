<?xml version="1.0" encoding="utf-8"?>
<aiscript name="lib.respond.foundabandonedship" priority="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <!-- library script to determine response to finding an abandoned ship.
        initially, called as interrupt script from interrupt.foundabandonedship -->
  <params>
    <param name="abandonedship"/>
    <param name="debugchance" default="0"/>
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="not $abandonedship">
        <debug_text text="'lib.respond.foundabandonedship called with no abandonedship set'" filter="error"/>
        <return/>
      </do_if>
      <do_elseif value="not $abandonedship.exists or not $abandonedship.isoperational">
        <debug_text text="'lib.respond.foundabandonedship called with invalid abandonedship. exists: %s, isoperational: %s'.[$abandonedship.exists, $abandonedship.isoperational]" filter="error"/>
        <return/>
      </do_elseif>
      <do_elseif value="$abandonedship.owner != faction.ownerless">
        <debug_text text="'lib.respond.foundabandonedship called but abandonedship is not ownerless. owner: %s'.[$abandonedship.owner]" filter="error"/>
        <return/>
      </do_elseif>
      <do_elseif value="$abandonedship.pilot or $abandonedship.people.count">
        <debug_text text="'lib.respond.foundabandonedship called but abandonedship is not abandoned. pilot: %s %s, num people on board: %s'.[@$abandonedship.pilot.knownname, @$abandonedship.pilot, $abandonedship.people.count]" filter="error"/>
        <return/>
      </do_elseif>

      <set_value name="$mode" exact="'foundabandonedship'"/>
      <set_value name="$title" exact="{1036, 121}"/>
      <set_value name="$text" exact="{1036, 123}.[this.assignedcontrolled.name, this.assignedcontrolled.idcode, this.sector.name, $abandonedship.name, $abandonedship.idcode]"/>

      <!-- trigger interaction if not disabled -->
      <!-- if the player defines default action 'claim' and explicitly says not to be bothered, and we cannot claim, should we call the player anyway? option should be worded "claim if possible" -->
      <do_if value="this.assignedcontrolled.signal.{$mode}.shouldaskplayer">
        <show_notification text="$title + '\n' + $text" timeout="10s" priority="1" comment="Found Abandoned Ship"/>

        <!-- INTERACTION: found an abandoned ship -->
        <run_script name="'player.interaction'" result="$responseresult">
          <param name="Line" value="11605" comment="We found something out here."/>
          <param name="UIText" value="{1015, 35}.[this.ship.idcode, this.ship.name]" comment="Requesting Orders"/>
          <param name="ConversationParam" value="'g_playerownedship_foundabandonedship'"/>
          <param name="MaxQueueDelay" value="10s"/>
          <param name="caption" value="{1015, 263} + ' - %s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]" comment="Found an abandoned ship"/>
          <param name="debugchance" value="$debugchance"/>
        </run_script>
        <do_if value="@$responseresult.{1} and $responseresult.{2}">
          <set_value name="$response" exact="$responseresult.{1}"/>
          <set_value name="$responsename" exact="$responseresult.{2}"/>
        </do_if>
      </do_if>

      <do_if value="not @$response">
        <set_value name="$response" exact="this.assignedcontrolled.signal.{$mode}.response.id"/>
      </do_if>
      <do_if value="not @$responsename">
        <set_value name="$responsename" exact="this.assignedcontrolled.signal.{$mode}.response.name"/>
      </do_if>
      <debug_text text="'response: ' + $response" chance="$debugchance"/>
      <write_to_logbook category="general" title="$title" text="$text + '\n' + {1001, 9322} + {1001, 120} + ' ' + $responsename" interaction="showonmap" object="$abandonedship"/>

      <!-- act on response based on interaction or defined default -->
      <do_if value="@$response">
        <do_if value="($response == 'claim') and not this.assignedcontrolled.people.{entityrole.marine}.count">
          <set_value name="$response" exact="'ignore'"/>
        </do_if>

        <do_if value="$response == 'claim'">
          <!-- pick a marine -->
          <set_value name="$marinetemplate" exact="this.assignedcontrolled.people.{entityrole.marine}.list.random"/>
          <!-- instantiate the marine -->
          <create_npc_from_template name="$marine" object="this.assignedcontrolled" template="$marinetemplate" owner="faction.player"/>
          <do_if value="$marine">
            <!-- remove the marine from this ship's crew manifest -->
            <remove_npc_template object="this.assignedcontrolled" template="$marinetemplate"/>
            <!--<set_owner object="$marine" faction="this.trueowner"/>-->
            <create_ship name="$pod" macro="ship_gen_xs_boardingpod_01_a_macro" zone="this.assignedcontrolled.zone">
              <owner exact="faction.player" overridenpc="true"/>
              <!--<owner exact="this.trueowner" overridenpc="true"/>-->
              <safepos object="this.assignedcontrolled" z="-1m" allowyaxis="true"/>
            </create_ship>
            <assign_control_entity actor="$marine" object="$pod" post="controlpost.aipilot" transfer="true" init="true"/>
            <start_script name="'move.claim'" object="$marine">
              <param name="target" value="$abandonedship"/>
              <param name="oldrole" value="entityrole.marine"/>
              <param name="debugchance" value="$debugchance"/>
            </start_script>
            <debug_text text="'sending %s %s to claim %s %s %s for %s'.[$marine.knownname, $marine, $abandonedship.idcode, $abandonedship.knownname, $abandonedship, $marine.owner]" chance="$debugchance"/>
          </do_if>
          <do_else>
            <debug_text text="'failed to create marine from template: %s in object: %s %s %s'.[$marinetemplate, this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled]" filter="error"/>
          </do_else>
        </do_if>
        <do_elseif value="$response == 'mark'">
          <debug_text text="'mark response not yet implemented'"/>
        </do_elseif>
        <do_elseif value="$response == 'protect'">
          <debug_text text="'%s %s %s protecting abandoned ship %s %s %s'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled, $abandonedship.idcode, $abandonedship.knownname, $abandonedship]" chance="$debugchance"/>
          <!-- will stop protecting if $abandonedship is claimed -->
          <create_order id="'ProtectShip'" object="this.assignedcontrolled" immediate="true" override="true">
            <param name="target" value="$abandonedship"/>
            <param name="timeout" value="1h"/>
            <param name="untilclaimed" value="true"/>
            <param name="debugchance" value="$debugchance"/>
          </create_order>
        </do_elseif>
        <do_elseif value="$response == 'ignore'">
          <!-- do nothing. resume orders. -->
        </do_elseif>
        <do_else>
          <debug_text text="'unhandled response to signal %s: %s. handle?'.[$mode, $response]" filter="error"/>
        </do_else>
      </do_if>
    </actions>
  </attention>
</aiscript>

<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="interrupt.attacked" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" priority="10">
  <params>
    <param name="attacker"/>
    <param name="attackrespond"/>
    <param name="callforhelp"/>
    <param name="fleerespond"/>
    <param name="debugchance" default="0" />
  </params>
  <interrupts>
    <library>
      <handler name="AttackHandler">
        <conditions>
          <event_object_attacked object="this.defensible"/>
          <!-- basic check [class.ship_l, class.ship_xl] -->
          <check_value value="not this.defensible.isclass.{class.station}" />
          <check_value value="event.param.isoperational and this.mayattack.{event.param}" />
          <check_value value="(not this.defensible.parkedat) and (not this.defensible.assigneddock) and (not this.defensible.dock) and (not this.zone.isclass.highway)" />
          <!-- Do not flee nor re-engage if already fleeing. -->
          <check_value value="this.command.value != command.withdrawbattle"/>
          <!-- Do not re-evaluate if already attacking the attacker. -->
          <check_value value="not (this.command.value == command.attackobject and this.command.param == event.param)" />
          <check_value value="@this.defensible.order.state != orderstate.critical" />
          <check_value value="not @$noattackresponse"/>
          <check_any>
            <check_value value="not @this.assignedcontrolled.commander.isoperational"/>
            <check_value value="not this.assignedcontrolled.subordinategroupdockoverride"/>
          </check_any>
          <!-- Respond conditions -->
          <check_any>
            <!-- Flee response -->
            <check_all>
              <check_any>
                <check_value value="this.assignedcontrolled.combinedskill ge 20" comment="at least 1 star on average"/>
                <check_value value="this.assignedcontrolled.isplayerowned"/>
              </check_any>
              <check_value value="not this.assignedcontrolled.isunit"/>
              <check_any>
                <!-- higher morale, flee at more shield damage
                      at 15 morale, flee at lt 15% shield,
                      at 9 morale, flee at lt 33% shield,
                      at 0 morale, flee at lt 60% shield.

                      pilots in combat ships evaluate morale as if they had 1 star more.

                    OR

                    higher combined skill, flee at more time to die
                      at 100 combinedskill, flee at lt 30 seconds,
                      at 80 combinedskill, flee at lt 10 seconds,
                      70 combinedskill and below do not consider time to die.

                    NB: Pilots with 5-star morale in a combat ship will NEVER fail the morale check.
                        They will only flee if they judge that they will die in less time than it takes to escape. -->
                <check_value value="((this.skill.morale * 6) + ((this.ship.primarypurpose == purpose.fight) * 20) + (this.ship.shieldpercentage * 2)) lt 120"/>
                <check_value value="((this.assignedcontrolled.combinedskill)hp - ((this.ship.shield + this.ship.hull) / [event.param.dps.all, 1hp].max)) gt 70"/>
              </check_any>
              <!--<check_value value="(((this.skill.morale * 6) + this.ship.shieldpercentage) lt 120) or (((this.assignedcontrolled.combinedskill) - this.ship.hullpercentage) le 20)"/>-->
              <set_value name="$fleerespond" exact="true" />
            </check_all>
            <!-- Attack response -->
            <check_all>
              <!-- NB: if we get here, we've decided not to flee. -->
              <!--<check_value value="not this.defensible.isplayerowned" comment="not engage player owned ships" />-->
              <check_value value="not this.defensible.iscapitalship" comment="if this is a capship, let the Defence Computer handle it" />
              <!--<check_value value="(not event.param.isclass.{class.station}) and (this.defensible.dps.all gt event.param.dps.all)"/>-->
              <check_any>
                <!-- xenon or khaak ships always immediately respond to attack. condition should only hold if this handler is not in order.fight.attack.object so that these ships won't keep redirecting attacks. -->
                <check_value value="(@this.assignedcontrolled.order.id != 'Attack') and ((this.trueowner == faction.xenon) or (this.trueowner == faction.khaak))"/>
                <!-- can i destroy my attacker before it can destroy me? approximation. -->
                <check_value value="((event.param.hull + event.param.shield) / [this.ship.dps.all, 1hp].max) lt ((this.ship.hull + this.ship.shield) / [event.param.dps.all, 1hp].max)"/>
              </check_any>
              <set_value name="$attackrespond" exact="true" />
            </check_all>
            <!-- Call for help -->
            <check_all>
              <!-- NB: removed insector check and changed signal object to player.galaxy so that the PCS can listen for all of them. revert here, in order.fight.attack.object.station, and in FactionGoal_PatrolCoordination_Service if this proves to be a bad idea. -->
              <check_value value="not this.isclass.computer"/>
              <check_value value="this.defensible.primarypurpose" exact="purpose.fight" negate="true"/>
              <check_value value="this.defensible.isclass.[class.ship_xs]" negate="true"/>
              <check_value value="event.param.isclass.[class.station, class.ship_xs]" negate="true"/>
              <check_value value="this.zone.policefaction and (this.defensible.relationto.{this.zone.policefaction} ge 0)"/>
              <check_value value="not this.assignedcontrolled.coverowner"/>
              <set_value name="$callforhelp" exact="true"/>
            </check_all>
          </check_any>
        </conditions>
        <actions>
          <!-- Only enter on the interrupt_script if it's really going to perform any action,
          otherwise the current action could be interrupted for a frame and restarted again -->
          <do_if value="this.ship.hull">
            <!-- Attack respond if there are weapons -->
            <do_if value="@$attackrespond">
              <debug_text text="'%1 taking fire from %2. Attacking. \n class: %3, purpose: %4, \n time to destroy attacker: %5, time to destroy me: %6'.[this.ship.knownname, event.param.knownname, this.ship.class, this.ship.primarypurpose, (event.param.hull + event.param.shield) / [this.ship.dps.all, 1hp].max, (this.ship.hull + this.ship.shield) / [event.param.dps.all, 1hp].max]" chance="$debugchance"/>

              <!-- if this ship decides to attack while it was moving to a distant location, cancel the subordinates' orders (to dock, or move ahead, or whatever) so the whole squadron could attack. -->
              <do_if value="this.$recalling_subordinates?">
                <do_if value="typeof this.$recalling_subordinates == datatype.list">
                  <set_value name="$interrupt_subordinateorders" exact="this.$recalling_subordinates.clone"/>
                  <do_all exact="$interrupt_subordinateorders.count" counter="$i" >
                    <cancel_order order="$interrupt_subordinateorders.{$i}" />
                  </do_all>
                </do_if>
                <remove_value name="this.$recalling_subordinates" />
              </do_if>

              <do_if value="event.param.isoperational">
                <create_order object="this.ship" id="'Attack'" immediate="true" override="true">
                  <param name="primarytarget" value="event.param"/>
                  <param name="escort" value="if this.ship.isformationwingman then this.ship.commander else null" comment="no error if there is no commander" />
                  <param name="pursuetargets" value="false" />
                  <param name="squad_attack" value="true"/>
                  <param name="internalorder" value="true"/>
                  <param name="allowothertargets" value="false" />
                </create_order>
              </do_if>
              <do_else>
                <debug_text text="'i am itching to fight but my attacker is already dead.'" chance="0"/>
              </do_else>

            </do_if>
            <do_elseif value="@$fleerespond">
              <debug_text text="'%1 taking fire from %2. Fleeing. \n morale: %3, shield: %4, shield cutoff: %8, \n combinedskill: %5, time to die: %6, time cutoff: %9, \n purpose: %7'.[this.ship.knownname, event.param.knownname, this.skill.morale, this.ship.shieldpercentage, this.assignedcontrolled.combinedskill, (this.ship.shield + this.ship.hull) / [event.param.dps.all, 1hp].max, this.ship.primarypurpose, (120 - (this.skill.morale * 6) - ((this.ship.primarypurpose == purpose.fight) * 20)) / 2, this.assignedcontrolled.combinedskill - 70]" chance="$debugchance"/>
              <!-- Flee -->
              <do_if value="this.defensible.isclass.ship and not this.defensible.iscapitalship">
                <do_any>
                  <set_value name="$flee" exact="'boost'"     weight="20" />
                  <set_value name="$flee" exact="'maneuver'"  weight="20" />
                  <set_value name="$flee" exact="'highway'"   weight="30" />
                  <set_value name="$flee" exact="'dock'"      weight="30" />
                </do_any>
              </do_if>
              <do_elseif value="this.defensible.iscapitalship">
                <set_value name="$flee" exact="'boost'" />
              </do_elseif>

              <!-- If there is a flee option -->
              <do_if value="$flee?" >
                <debug_text text="'%4: flee with %1. Hull %2/Shield %3'.[$flee, this.ship.hullpercentage, this.ship.shieldpercentage, player.age]" chance="0"/>

                <do_all exact="this.ship.orders.count + 1" counter="$counter_orders">
                  <do_if value="$counter_orders gt this.ship.orders.count">
                    <debug_text text="'%1 (%2) fleeing and resupplying.'.[this.ship.knownname, this.ship]" chance="$debugchance"/>
                    <signal_objects object="this.ship" param="'resupply'" param2="[false]" param3="$debugchance" comment="param2 = [urgent?, resupplystationID], param3 = $debugchance"/>
                  </do_if>
                  <do_elseif value="this.ship.orders.{$counter_orders}.id" exact="'Resupply'">
                    <debug_text text="'%1 (%2) fleeing but already has a resupply order.'.[this.ship.knownname, this.ship]" chance="$debugchance"/>
                    <break/>
                  </do_elseif>
                </do_all>

                <create_order object="this.ship" id="'Flee'" immediate="true" override="true">
                  <param name="method" value="$flee" />
                  <param name="attacker" value="event.param" />
                </create_order>

                <debug_text text="'%1: flee %2. Hull %4/Shield %5'.[player.age, $flee, this.ship.hullpercentage, this.ship.shieldpercentage]" chance="0"/>
              </do_if>

              <!-- Flee and Call for help -->
              <!-- NB: repeated conditions here since these do not get evaluated in conditions if a ship decides to flee. difference: combat ships will call for help if they decide to flee, but will not call for help if they decide to just shrug you off. -->
              <do_if value="not this.isclass.computer and not event.param.isclass.[class.station, class.ship_xs] and not this.defensible.isclass.ship_xs and this.zone.policefaction and (this.defensible.relationto.{this.zone.policefaction} ge 0) and not this.assignedcontrolled.coverowner">
                <do_if value="not @$distressdrone_sentagainst.indexof.{event.param.owner}">
                  <launch_distressdrone object="this.assignedcontrolled" attacker="event.param" macro="macro.ship_gen_xs_distressbeacon_01_a_macro"/>
                  <do_if value="not @$distressdrone_sentagainst.count">
                    <set_value name="$distressdrone_sentagainst" exact="[event.param.owner]"/>
                  </do_if>
                  <do_else>
                    <append_to_list name="$distressdrone_sentagainst" exact="event.param.owner"/>
                  </do_else>
                </do_if>
                <signal_objects object="player.galaxy" param="'ship_in_distress'" param2="this.defensible" param3="event.param"/>
                <debug_text text="'%1 under attack. Fleeing and calling for help.'.[this.defensible.knownname]" chance="$debugchance"/>
              </do_if>
            </do_elseif>
            <do_elseif value="@$callforhelp">
              <do_if value="not @$distressdrone_sentagainst.indexof.{event.param.owner}">
                <launch_distressdrone object="this.assignedcontrolled" attacker="event.param" macro="macro.ship_gen_xs_distressbeacon_01_a_macro"/>
                <do_if value="not @$distressdrone_sentagainst.count">
                  <set_value name="$distressdrone_sentagainst" exact="[event.param.owner]"/>
                </do_if>
                <do_else>
                  <append_to_list name="$distressdrone_sentagainst" exact="event.param.owner"/>
                </do_else>
              </do_if>
              <signal_objects object="player.galaxy" param="'ship_in_distress'" param2="this.defensible" param3="event.param"/>
              <debug_text text="'%1 (%2) under attack. Calling for help.'.[this.defensible.knownname, this.defensible]" chance="$debugchance"/>
            </do_elseif>
          </do_if>
          <!-- Clear flags -->
          <remove_value name="$attackrespond" />
          <remove_value name="$fleerespond" />
          <remove_value name="$callforhelp" />
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>

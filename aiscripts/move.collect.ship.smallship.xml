<?xml version="1.0" encoding="iso-8859-1" ?>

<!--

Script for a ship to collect crates from space
Handled cases:
- small ship collecting crates of inventory wares via flying into it

-->

<aiscript name="move.collect.ship.smallship" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <params>
    <param name="targets" comment="Group of crates to pickup" />

    <!-- debugging -->
    <param name="debugchance" default="0" comment="informational debug output"/>
  </params>
  <interrupts>
    <handler ref="TargetInvalidHandler"/>
  </interrupts>
  <attention min="unknown">
    <actions>
      <label name="start" />

      <wait min="10ms" max="50ms"/>

      <do_all exact="$targets.count" counter="$i" reverse="true">
        <do_if value="not $targets.{$i}.isclass.collectable and not $targets.{$i}.isdeployable">
          <debug_text text="'target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + ' is not of class collectable. Removing from group.'" chance="$debugchance"/>
          <remove_from_group group="$targets" object="$targets.{$i}"/>
        </do_if>
        <do_elseif value="$targets.{$i}.isdeployable">
          <do_if value="not this.assignedcontrolled.ammostorage.deployable.free">
            <debug_text text="'no storage space remaining for deployable target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + '. Removing from group.'" chance="$debugchance"/>
            <remove_from_group group="$targets" object="$targets.{$i}"/>
          </do_if>
        </do_elseif>
        <do_else>
          <set_value name="$wares" exact="$targets.{$i}.wares.list"/>
          <do_all exact="$wares.count" counter="$o">
            <do_if value="$wares.{$o}.isammo">
              <do_if value="$wares.{$o}.isdeployable and not this.ship.ammostorage.deployable.free">
                <debug_text text="'deployable case: target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + ' cannot collect contained ware. ' + $wares + ' Removing from group.'" chance="$debugchance"/>
                <remove_from_group group="$targets" object="$targets.{$i}"/>
                <break/>
              </do_if>
              <do_elseif value="$wares.{$o}.objectmacro.isclass.countermeasure and not this.ship.ammostorage.countermeasure.free">
                <debug_text text="'countermeasure case: target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + ' cannot collect contained ware. ' + $wares + ' Removing from group.'" chance="$debugchance"/>
                <remove_from_group group="$targets" object="$targets.{$i}"/>
                <break/>
              </do_elseif>
              <do_elseif value="not this.ship.ammostorage.{$wares.{$o}}.free">
                <debug_text text="'ammo case: target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + ' cannot collect contained ware. ' + $wares + ' Removing from group.'" chance="$debugchance"/>
                <remove_from_group group="$targets" object="$targets.{$i}"/>
                <break/>
              </do_elseif>
            </do_if>
            <do_elseif value="not $wares.{$o}.isinventory and not this.ship.cargo.{$wares.{$o}}.free">
              <debug_text text="'cargo case: target ' + $targets.{$i} + ' ' + $targets.{$i}.macro.id + ' cannot collect contained ware. ' + $wares + ' Removing from group.'" chance="$debugchance"/>
              <remove_from_group group="$targets" object="$targets.{$i}"/>
              <break/>
            </do_elseif>
          </do_all>
          <remove_value name="$wares"/>
        </do_else>
      </do_all>

      <do_if value="not $targets.count">
        <return value="true"/>
      </do_if>

      <set_value name="$nearest" exact="null"/>
      <set_value name="$nearestdist" exact="null"/>
      <do_all exact="$targets.count" counter="$i">
        <do_if value="not $nearest and $targets.{$i}.sector == this.sector">
          <set_value name="$nearest" exact="$targets.{$i}"/>
          <set_value name="$nearestdist" exact="$targets.{$i}.distanceto.{this.ship}"/>
        </do_if>
        <do_elseif value="$nearest and $targets.{$i}.sector == this.sector">
          <do_if value="$targets.{$i}.distanceto.{this.ship} lt $nearestdist">
            <set_value name="$nearest" exact="$targets.{$i}"/>
            <set_value name="$nearestdist" exact="$targets.{$i}.distanceto.{this.ship}"/>
          </do_if>
        </do_elseif>
      </do_all>

      <do_if value="$nearest">
        <set_value name="$target" exact="$nearest"/>
      </do_if>
      <do_else>
        <!--Apparently not in the sector of either target, just move to the first in the list-->
        <run_script name="'move.generic'">
          <param name="destination" value="$targets.{1}"/>
          <param name="endintargetzone" value="true"/>
        </run_script>

        <resume label="start"/>
      </do_else>

      <label name="collect"/>

      <do_if value="not $target.exists">
        <resume label="start"/>
      </do_if>

      <!-- Now there is a target -->
      <set_command command="command.collect" param="$target" />

      <!-- leave formation (if there is any) as that would block our movement -->
      <leave_formation object="this.ship" />

      <!-- if necessary order the ship to move to the correct zone -->
      <debug_text text="'check if already in correct zone'" chance="$debugchance" />
      <do_if value="this.ship.zone != $target.zone">
        <debug_text text="'move to correct zone'" chance="$debugchance" />
        <run_script name="'move.generic'">
          <param name="destination" value="$target"/>
          <param name="endintargetzone" value="true"/>
        </run_script>
      </do_if>

      <label name="movetotarget" />

      <do_if value="not $target.exists">
        <resume label="start"/>
      </do_if>

      <debug_text text="'movetotarget'" chance="$debugchance"/>

      <set_value name="$success" exact="false"/>
      <do_if value="$target.isdeployable">
        <debug_text text="'deactivating %s %s %s prior to collection.'.[@$target.idcode, @$target.knownname, $target]" chance="$debugchance"/>
        <set_object_active object="$target" activate="false"/>
        <set_value name="$collectdeployable"/>
      </do_if>

      <!--TODO: Better flight behaviour-->
      <move_to object="this.ship" destination="$target" flightbehaviour="flightbehaviour.generic" forcesteering="true" finishonapproach="false">
        <interrupt>
          <conditions>
            <check_any>
              <event_object_collided object="this.ship" otherobject="$target"/>
              <event_object_destroyed object="$target"/>
            </check_any>
          </conditions>
        </interrupt>
      </move_to>
      <stop_moving object="this.ship"/>

      <do_if value="$target.exists and not $target.iswreck">
        <debug_text text="'Collecting the target.'" chance="$debugchance"/>
        <do_if value="not $collectdeployable?">
          <collect_drop object="this.ship" drop="$target"/>
        </do_if>
        <do_else>
          <debug_text text="'%s %s %s collecting deployable %s %s'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled, @$target.knownname, $target]" chance="$debugchance"/>
          <collect_deployable object="this.assignedcontrolled" deployable="$target"/>
        </do_else>
        <remove_from_group group="$targets" object="$target"/>
        <wait exact="10ms"/>
      </do_if>
      <remove_value name="$collectdeployable"/>

      <!-- Iterate -->
      <do_if value="$targets.count">
        <resume label="start" />
      </do_if>

      <set_to_default_flight_control_model object="this.ship" />

      <return value="$success"/>
    </actions>
  </attention>
</aiscript>
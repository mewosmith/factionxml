<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="order.assign.commander" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
  <!--
   Simple order to assign/remove to this object a commander (with entity type)
   by Adrian
   
  -->
  <order id="AssignCommander" name="{1041, 521}" description="{1041, 522}" category="navigation">
    <params>
      <param name="commander" default="null" type="object" text="{1041, 10076}" comment="New commander. No commander means remove current commander" />
      <param name="assignment" default="null" type="internal" text="{1041, 10009}" comment="Assignment. Ignored if subordinategroup is supplied unless setgroupassignment is also set."/>
      <param name="subordinategroup" default="0" type="number" advanced="true" text="{1041, 10162}" comment="Subordinate group ID">
        <input_param name="min" value="1"/>
        <input_param name="max" value="10"/>
        <input_param name="step" value="1"/>
      </param>
      <param name="setgroupassignment" default="false" type="bool" advanced="true" text="{1041, 10163}" comment="Set group assignment"/>
      <param name="cancelorders" default="true" type="bool" text="{1041, 10022}" advanced="true" comment="Cancel all orders"/>
      <param name="response" default="false" type="internal" text="{1041, 10025}" comment="Confirmation response"/>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
    <location object="$commander" condition="@$commander.isoperational" />
  </order>
  <attention min="unknown">
    <actions>
      <debug_text text="'AssignCommander called. commander: %s, assignment: %s, cancelorders: %s, response: %s, debugchance: %s'.[$commander, $assignment, $cancelorders, $response, $debugchance]" chance="$debugchance"/>

      <!-- If there is commander set it, if not remove it -->
      <do_if value="$commander.isoperational">

        <do_if value="$commander.trueowner != this.trueowner">
          <debug_text text="'%s (%s) tried to be assigned subordinate to %s (%s) which belongs to a different faction. denied.'.[this.object.knownname, this.object, @$commander.knownname, $commander]" filter="error"/>
          <return value="false"/>
        </do_if>

        <debug_text text="'commander: %1 (%2) new commander: %3 (%4)'.[@this.object.commander.knownname, @this.object.commander, @$commander.knownname, $commander]" chance="$debugchance"/>

        <do_if value="$assignment">
          <!-- needed for assignments passed in from lua -->
          <do_if value="typeof $assignment != datatype.assignment">
            <set_value name="$assignment" exact="assignment.{$assignment}"/>
          </do_if>
          <do_if value="not this.object.canuseassignment.{$assignment}.{$commander}">
            <debug_text text="'%s %s %s cannot use specified assignment: %s'.[@this.object.idcode, @this.object.knownname, this.object, $assignment]" filter="error"/>
            <set_value name="$assignment" exact="null"/>
          </do_if>
        </do_if>

        <do_if value="$setgroupassignment and $assignment and ($subordinategroup gt 0)">
          <debug_text text="'setting group assignment for group %s from %s to %s'.[this.assignedcontrolled.subordinategroupid, this.assignedcontrolled.assignment, $assignment]" chance="0"/>
          <set_subordinate_group_assignment object="this.object" commander="$commander" subordinategroupid="$subordinategroup" assignment="$assignment"/>
        </do_if>

        <do_if value="$subordinategroup gt 0">
          <set_object_commander object="this.object" commander="$commander" subordinategroupid="$subordinategroup"/>
        </do_if>
        <do_elseif value="$assignment">
          <set_object_commander object="this.object" commander="$commander" assignment="$assignment"/>
        </do_elseif>
        <do_else>
          <set_object_commander object="this.object" commander="$commander"/>
        </do_else>

        <do_if value="this.object.commander == $commander">
          <debug_text text="'commander changed to: %1 (%2)'.[@this.object.commander.knownname, this.object.commander]" chance="$debugchance"/>

          <set_value name="$defaultorder" exact="this.object.defaultorder"/>
          <set_value name="$newassignment" exact="this.assignedcontrolled.assignment"/>
          <do_if value="$commander.isclass.ship and not this.assignedcontrolled.subordinategroupdockoverride and $defaultorder and ($defaultorder.id == 'Escort' or $defaultorder.id == 'ProtectShip') and (($newassignment == assignment.defence) or ($newassignment == assignment.attack) or ($newassignment == assignment.interception))">
            <do_if value="$defaultorder.$target != $commander">
              <do_if value="this.ship.iscapitalship and $commander.isclass.[class.ship_s, class.ship_m]">
                <create_order id="'ProtectShip'" object="this.object" default="true">
                  <param name="target" value="$commander"/>
                  <param name="debugchance" value="$defaultorder.$debugchance"/>
                </create_order>
              </do_if>
              <do_else>
                <create_order id="'Escort'" object="this.object" default="true">
                  <param name="target" value="$commander"/>
                  <param name="debugchance" value="$defaultorder.$debugchance"/>
                </create_order>
              </do_else>
              <do_if value="$debugchance == 100">
                <set_value name="$defaultorder" exact="this.object.defaultorder"/>
                <debug_text text="'target of: %1 is now %2 (%3)'.[$defaultorder.id, $defaultorder.$target.knownname, $defaultorder.$target]"/>
              </do_if>
            </do_if>
          </do_if>
          <do_elseif value="@$defaultorder.id == 'Plunder'">
            <!-- do nothing. plunder should remain this ship's default order. -->
          </do_elseif>
          <do_else>
            <!-- unless our default order is to escort a ship, request new orders from our new commander. requires an assignment to enable the commander to know what we should do. -->
            <run_script name="'lib.request.orders'">
              <param name="object" value="this.object"/>
              <param name="debugchance" value="$debugchance"/>
            </run_script>
          </do_else>

          <do_if value="$response and this.object.pilot and $commander == player.occupiedship">
            <run_script name="'player.interaction'">
              <param name="Line" value="10530" comment="Joining squad."/>
              <param name="MaxQueueDelay" value="10s"/>
              <param name="caption" value="'%s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]"/>
              <param name="interactive" value="false"/>
              <param name="debugchance" value="$debugchance"/>
            </run_script>
          </do_if>
        </do_if>
        <do_else>
          <debug_text text="'commander failed to change to: %1 (%2). Still %3 (%4)'.[@$commander.knownname, $commander, @this.object.commander.knownname, this.object.commander]"/>
          <return value="false"/>
        </do_else>
      </do_if>
      <do_else>
        <do_if value="this.object.pilot">
          <do_if value="$response and player.occupiedship and (this.object.commander == player.occupiedship)">
            <run_script name="'player.interaction'">
              <param name="Line" value="10531" comment="Leaving squad."/>
              <param name="MaxQueueDelay" value="10s"/>
              <param name="caption" value="'%s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]"/>
              <param name="interactive" value="false"/>
              <param name="debugchance" value="$debugchance"/>
            </run_script>
          </do_if>
          <remove_object_commander object="this.assignedcontrolled"/>
          <run_script name="'lib.request.orders'" sinceversion="1">
            <param name="object" value="this.assignedcontrolled"/>
          </run_script>
        </do_if>
      </do_else>

      <!-- if all (previous and current) orders should be cancelled, then automatically request new orders -->
      <do_if value="$cancelorders">
        <cancel_all_orders object="this.object" />
      </do_if>

      <return value="true"/>

    </actions>
  </attention>
</aiscript>
<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="move.evade" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="3">
  <!--

  Evade routines:
  
     <behaviour name="hardbrake"       
     <behaviour name="evasive_loop"   
     <behaviour name="evasive_simple"  
     <behaviour name="evasive_roll"    
     <behaviour name="evasive_spiral"  
     <behaviour name="evasive_random"  
     <behaviour name="crazyivan"       
     <behaviour name="spiral"          
     <behaviour name="gaindistance"    
     
     If it is 'gaindistance' it will try to use the boosters

  -->
  <params>
    <param name="target" default="null" />
    <param name="allowboost" default="true"/>
    <param name="debugchance" default="0" />
  </params>
  <interrupts>
    <handler ref="TargetInvalidHandler"/>
  </interrupts>
  <patch sinceversion="2" early="true">
    <set_value name="$moveduration" exact="10s"/>
    <do_if value="@$boost">
      <set_value name="$moveduration" exact="(this.assignedcontrolled.boost.maxduration * (this.assignedcontrolled.shieldpercentage / 100.0) * 0.5)s"/>
    </do_if>
  </patch>
  <patch sinceversion="3">
    <do_if value="not $allowboost?">
      <set_value name="$allowboost" exact="true"/>
    </do_if>
  </patch>
  <attention min="visible">
    <actions>
      <!-- evasive maneuver -->
      <label name="Random" />

      <!-- EVADE: Random evasive flight behaviours -->
      <set_value name="$doevade" exact="true" />
      <set_value name="$maxevadedelay" min="player.age + 15s" max="player.age + 25s" />
      <!-- try different moves -->
      <do_while value="$doevade and player.age le $maxevadedelay">
        <set_value name="$doevade" exact="false" />
        <set_value name="$minevadedelay" min="player.age + 4s" max="player.age + 8s"/>

        <select_flight_behaviour entity="this" evasive="true" result="$fb"/>
        <debug_text text="'EVADE using %1 at %2'.[$fb, player.age]" chance="$debugchance" />

        <set_value name="$boost" exact="false"/>
        <set_value name="$moveduration" exact="10s"/>
        <!-- chance to boost based on skills -->
        <do_if value="$allowboost and ($fb != flightbehaviour.hardbrake) and (this.assignedcontrolled.shieldpercentage gt 50)" chance="this.assignedcontrolled.combinedskill">
          <set_value name="$boost" exact="true"/>
          <set_value name="$moveduration" exact="(this.assignedcontrolled.boost.maxduration * (this.assignedcontrolled.shieldpercentage / 100.0) * 0.5)s"/>
          <debug_text text="'Boosting with %1'.[$fb]" chance="$debugchance" />
        </do_if>

        <move_to object="this.ship" destination="this.ship.zone" flightbehaviour="$fb" forcesteering="true" boost="$boost">
          <position object="this.ship" min="500m" max="1km"/>
          <interrupt_after_time time="$moveduration"/>
          <interrupt>
            <conditions>
              <event_object_attacked object="this.ship" />
              <check_age min="$minevadedelay"/>
            </conditions>
            <actions>
              <set_value name="$doevade" exact="true" />
            </actions>
          </interrupt>
        </move_to>
        <do_if value="$boost">
          <debug_text text="'%s %s %s shield percentage after boost: %s'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled, this.assignedcontrolled.shieldpercentage]" chance="0"/>
        </do_if>

        <!-- Stop Boosting (safe even if not boosting) -->
        <stop_boost object="this.ship" />

      </do_while>

      <label name="Finish" />
      <debug_text text="'Finish'" chance="$debugchance"  />

    </actions>
  </attention>
</aiscript>
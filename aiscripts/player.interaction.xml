<?xml version="1.0" encoding="iso-8859-1" ?>
<aiscript name="player.interaction" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">

  <params>
    <param name="Page" default="this.page" />
    <param name="Line" />
    <param name="UIText" default="''"/>
    <param name="ConversationParam" default="null"/>
    <param name="Duration" default="10s" />
    <param name="MaxQueueDelay" default="45s" />
    <param name="Cutscene" default="'ShowPilot'" />
    <param name="caption" default="null"/>
    <param name="interactive" default="true"/>
    <param name="debugchance" default="0"/>
  </params>

  <attention min="unknown">
    <actions>
      <do_if value="not this.isclass.npc">
        <debug_text text="'player.interaction called for %s %s who is not an NPC. aborting.'.[@this.knownname, this]" filter="error"/>
        <return value="null"/>
      </do_if>

      <!-- Allow multiple interactive events to queue up. Reserve time for our own interaction and wait until previous interactions are over. -->
      <set_value name="$queuedelay" exact="@global.$NextPlayerInteraction - player.age" />
      <do_if value="$queuedelay gt $MaxQueueDelay">
        <debug_text text="'Required delay %1s exceeds max delay %2s, no interaction'.[$queuedelay, $MaxQueueDelay]" chance="$debugchance" />
        <!-- Required delay too long, no interaction -->
        <return value="null" />
      </do_if>
      <do_if value="$queuedelay gt 0s">
        <debug_text text="'Another player interaction is in progress, wait %1 seconds'.[$queuedelay]" chance="$debugchance" />
        <set_value name="global.$NextPlayerInteraction" exact="global.$NextPlayerInteraction + $Duration + 500ms" />
        <wait exact="$queuedelay" />
      </do_if>
      <do_elseif value="player.isinconversation">
        <debug_text text="'Conversation is running, wait in 5 seconds and try again'" chance="$debugchance" />
        <do_if value="$MaxQueueDelay ge 5s">
          <set_value name="global.$NextPlayerInteraction" exact="player.age + 5s + $Duration + 500ms" />
          <wait exact="5s" />
        </do_if>
      </do_elseif>
      <do_else>
        <debug_text text="'No conversation and no other player interaction detected'" chance="$debugchance" />
        <set_value name="global.$NextPlayerInteraction" exact="player.age + $Duration + 500ms" />
      </do_else>
      <!-- Conversation still running despite delay above, but we can't wait forever -->
      <do_if value="player.isinconversation">
        <debug_text text="'Conversation still running, no interaction'" chance="$debugchance" />
        <return value="null" />
      </do_if>

      <debug_text text="'Playing cutscene ' + $Cutscene + ' with npcref=' + this" chance="$debugchance" />
      <do_if value="not $caption">
        <do_if value="this.container and this.isplayerowned">
          <set_value name="$caption" exact="this.container.name" />
        </do_if>
        <do_else>
          <set_value name="$caption" exact="''" comment="Not shown" />
        </do_else>
      </do_if>

      <do_if value="$interactive">
        <play_cutscene result="$cutsceneid" key="$Cutscene" targetmonitor="true" timeout="$Duration + 100ms" caption="$caption" sound="notification_conversationstart">
          <interaction text="$UIText" param="this" param2="$ConversationParam"/>
          <param name="npcref" object="this"/>
        </play_cutscene>
      </do_if>
      <do_else>
        <!-- Ignore duration if it's longer than 4 seconds per line - take into account that $Line can be a list of lines -->
        <play_cutscene result="$cutsceneid" key="$Cutscene" targetmonitor="true" timeout="[$Duration, [@$Line.count, 1].max * 4s].min + 100ms" caption="$caption" sound="notification_conversationstart">
          <param name="npcref" object="this"/>
        </play_cutscene>
      </do_else>

      <do_if value="@$cutsceneid">
        <wait exact="10s">
          <interrupt>
            <conditions>
              <event_cutscene_started cutscene="$cutsceneid"/>
            </conditions>
          </interrupt>
        </wait>
        <wait exact="1ms" comment="2nd wait to guarantee we wait at least 2 frames for the character information to be loaded."/>
        <speak actor="this" page="$Page" line="$Line" priority="99" />

        <do_if value="$interactive">
          <debug_text text="'Waiting ' + $Duration + ' seconds for events'" chance="$debugchance" />
          <wait exact="$Duration">
            <interrupt>
              <conditions>
                <check_any>
                  <event_player_interaction param="this" />
                  <event_cutscene_stopped cutscene="$cutsceneid"/>
                </check_any>
              </conditions>
              <actions>
                <debug_text text="'Got event ' + event.name" chance="$debugchance" />
                <do_if value="event.name == 'event_cutscene_stopped'">
                  <set_value name="$result" exact="'abort'" />
                </do_if>
                <do_else>
                  <set_value name="$result" exact="null" />
                </do_else>
              </actions>
            </interrupt>
          </wait>

          <debug_text text="'Finished waiting, $result=' + @$result" chance="$debugchance" />
          <do_if value="@$result == 'abort'">
            <!-- NPC cutscene has been stopped -->
            <return value="null" />
          </do_if>
          <stop_cutscene cutscene="$cutsceneid"/>
        </do_if>
      </do_if>

      <do_if value="$result?">
        <!-- player is interacting -->
        <!-- to open a menu via player.interaction:
              return section "g_interactionmenu",
                param returned should be of format: [$result, $menuname, $menuparam, $menuparam2],
              if menu is not yet handled in section below that begins with <do_if value="$openmenu?">, add a handler there. -->
        <start_conversation actor="this" conversation="InteractiveEventContinued" convparam="$ConversationParam" />
        <wait>
          <interrupt>
            <conditions>
              <check_any>
                <event_conversation_next_section actor="this" section="g_interactionresult" />
                <event_conversation_next_section actor="this" section="g_interactionmenu"/>
                <event_conversation_finished actor="this"/>
              </check_any>
            </conditions>
            <actions>
              <do_if value="event.name == 'event_conversation_next_section'">
                <do_if value="event.param == 'g_interactionmenu'">
                  <set_value name="$result" exact="event.param2.{1}"/>
                  <set_value name="$openmenu" exact="event.param2.{2}"/>
                  <set_value name="$menuparam" exact="@event.param2.{3}"/>
                  <set_value name="$menuparam2" exact="@event.param2.{4}"/>
                </do_if>
                <do_else>
                  <set_value name="$result" exact="event.param2"/>
                </do_else>
              </do_if>
              <do_else>
                <set_value name="$result" exact="null" />
              </do_else>
            </actions>
          </interrupt>
        </wait>

        <do_if value="$openmenu?">
          <debug_text text="'opening menu %s. param: %s, param2: %s'.[$openmenu, $menuparam, $menuparam2]" chance="$debugchance"/>
          <!-- NB: the name attribute of open_conversation_menu only accepts strings, not expressions, so to open a menu through here, a do_elseif would have to be added below for each menu that isn't on the list. -->
          <do_if value="$openmenu == 'MapMenu'">
            <open_conversation_menu menu="MapMenu" param="$menuparam" param2="$menuparam2"/>
          </do_if>
          <do_elseif value="$openmenu == 'PlayerInfoMenu'">
            <open_conversation_menu menu="PlayerInfoMenu" param="$menuparam" param2="$menuparam2"/>
          </do_elseif>
          <do_elseif value="$openmenu == 'ShipConfigurationMenu'">
            <open_conversation_menu menu="ShipConfigurationMenu" param="$menuparam" param2="$menuparam2"/>
          </do_elseif>
          <do_else>
            <debug_text text="'opening menu %s via player.interaction is not yet handled.'.[$openmenu]" filter="error"/>
          </do_else>
        </do_if>
      </do_if>

      <!-- Return value is the result provided by the conversation (implemented in MD), or null if there was no interaction -->
      <debug_text text="'Returning result: ' + @$result" chance="$debugchance" />
      <return value="@$result" />
    </actions>
  </attention>
</aiscript>

<?xml version="1.0" encoding="utf-8"?>
<aiscript name="lib.set.weaponmode" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <params>
    <param name="controllable" default="this.assignedcontrolled" comment="Controllable whose weapons and turrets will be set to $weaponmode."/>
    <param name="weaponmode" default="null" comment="Weaponmode that all weapons and turrets will be set to. Modes: weaponmode.any, weaponmode.attackenemies, weaponmode.defend, weaponmode.mining, weaponmode.missiledefence"/>
    <param name="weapons" default="[]" comment="list of weapons to set weaponmode or weaponmodes to. optional. if not specified, will apply $weaponmode or $weaponmodes to all weapons on $controllable."/>
    <param name="weaponmodes" default="table[]" comment="table of weaponmodes. keys == weapon component IDs, values == weaponmodes. optional. preferred over $weaponmode if specified."/>
    <param name="debugchance" default="0"/>
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="not $controllable.isoperational">
        <debug_text text="'lib.set.weaponmode called to act on non-operational controllable: %s %s %s. returning.'.[@$controllable.idcode, @$controllable.knownname, $controllable]" filter="error"/>
        <return value="false"/>
      </do_if>

      <do_if value="not $weaponmode">
        <set_value name="$weaponmode" exact="weaponmode.holdfire"/>
        <debug_text text="'lib.set.weaponmode called with no weaponmode specified. falling back on weaponmode.holdfire.'" chance="$debugchance"/>
      </do_if>

      <set_value name="$oldweaponmodes" exact="table[]"/>

      <do_if value="not $weapons.count">
        <find_object_component name="$weapons" object="$controllable" weapontype="combat" multiple="true"/>
      </do_if>

      <do_all exact="$weapons.count" counter="$i">
        <debug_text text="'$weapon %s %s. mode: %s'.[$weapons.{$i}.knownname, $weapons.{$i}, $weapons.{$i}.mode]" chance="$debugchance"/>
        <set_value name="$oldweaponmodes.{$weapons.{$i}}" exact="$weapons.{$i}.mode"/>

        <do_if value="$weaponmodes.keys.count and $weaponmodes.{$weapons.{$i}}">
          <set_weapon_mode weapon="$weapons.{$i}" weaponmode="$weaponmodes.{$weapons.{$i}}"/>
          <debug_text text="'setting weapon %s %s to mode %s'.[$weapons.{$i}.knownname, $weapons.{$i}, $weaponmodes.{$weapons.{$i}}]" chance="$debugchance"/>
        </do_if>
        <do_else>
          <set_weapon_mode weapon="$weapons.{$i}" weaponmode="$weaponmode"/>
          <debug_text text="'setting weapon %s %s to mode %s'.[$weapons.{$i}.knownname, $weapons.{$i}, $weaponmode]" chance="$debugchance"/>
        </do_else>
      </do_all>

      <!-- return weapons and old weaponmodes to allow calling script to reset to them if so desired. -->
      <return value="$oldweaponmodes"/>
    </actions>
  </attention>
</aiscript>
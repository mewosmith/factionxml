<?xml version="1.0" encoding="utf-8"?>
<aiscript name="interrupt.foundabandonedship" priority="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <interrupts>
    <library>
      <handler name="FoundAbandonedHandler">
        <conditions>
          <event_gravidar_has_scanned object="if (not @this.assignedcontrolled.isunit and this.isclass.npc and this.isplayerowned) then this.assignedcontrolled else null" check="false"/>
          <check_value value="not this.assignedcontrolled.commander or (this.assignedcontrolled.commander == @player.occupiedship)"/>
          <check_value value="this.sector and not this.zone.isclass.highway and not this.assignedcontrolled.dock"/>
          <check_value value="this.object.order and this.object.order.state != orderstate.critical"/>
          <count_gravidar_contacts result="$abandonedship" object="this.assignedcontrolled" class="class.ship" docked="false" capturable="true" functional="true" min="1" multiple="false">
            <match_context macro="this.sector.macro"/>
            <match_context class="class.highway" negate="true"/>
            <match owner="faction.ownerless"/>
          </count_gravidar_contacts>
          <check_value value="not $abandonedship.pilot and not $abandonedship.people.count"/>
          <check_value value="not @global.$foundabandonedships.indexof.{$abandonedship}"/>
          <check_value value="$abandonedship.sector"/>
        </conditions>
        <actions>
          <do_if value="not global.$foundabandonedships?">
            <set_value name="global.$foundabandonedships" exact="[$abandonedship]"/>
            <debug_text text="'initializing foundabandonedshiplist'" chance="0"/>
          </do_if>
          <do_else>
            <append_to_list name="global.$foundabandonedships" exact="$abandonedship"/>
            <debug_text text="'appending to foundabandonedshiplist. num entries: ' + global.$foundabandonedships.count" chance="0"/>
          </do_else>

          <do_all exact="global.$foundabandonedships.count" counter="$i" reverse="true" comment="clean up list">
            <do_if value="not global.$foundabandonedships.{$i}.isoperational or (global.$foundabandonedships.{$i}.owner != faction.ownerless) or global.$foundabandonedships.{$i}.pilot or global.$foundabandonedships.{$i}.people.count">
              <debug_text text="'cleaning up %s %s %s from foundabandonedship list.\n operational: %s\n owner: %s\n haspilot: %s\n people aboard: %s'.[global.$foundabandonedships.{$i}.idcode, global.$foundabandonedships.{$i}.knownname, global.$foundabandonedships.{$i}, global.$foundabandonedships.{$i}.isoperational, global.$foundabandonedships.{$i}.owner, global.$foundabandonedships.{$i}.pilot, global.$foundabandonedships.{$i}.people.count]" chance="0"/>
              <remove_value name="global.$foundabandonedships.{$i}"/>
            </do_if>
          </do_all>
          <debug_text text="'cleaned up foundabandonedshiplist. num entries: ' + global.$foundabandonedships.count" chance="0"/>

          <debug_text text="'%s %s %s found abandoned %s %s %s %s in %s %s'.[this.assignedcontrolled.idcode, this.assignedcontrolled.knownname, this.assignedcontrolled, @$abandonedship.class, @$abandonedship.idcode, @$abandonedship.knownname, @$abandonedship, @$abandonedship.sector.knownname, @$abandonedship.sector]" chance="@$debugchance"/>
          <run_interrupt_script name="'lib.respond.foundabandonedship'">
            <param name="abandonedship" value="$abandonedship"/>
            <param name="debugchance" value="@$debugchance"/>
          </run_interrupt_script>
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>

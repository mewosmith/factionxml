<?xml version="1.0" encoding="utf-8"?>
<aiscript name="interrupt.changedsector" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" priority="11">
  <interrupts>
    <library>
      <handler name="SectorChangeHandler">
        <conditions>
          <check_any>
            <!-- remember that event_object_changed_sector happens AFTER changing sectors while these two happen upon entering either an anomaly or a gate. -->
            <event_object_entered_anomaly object="this.ship"/>
            <event_object_entered_gate object="this.ship"/>
          </check_any>
        </conditions>
        <actions>
          <!-- NB: $nextsector is set in move.generic right before calling move.gate and is cleared immediately after. -->
          <!-- NB: $pathsectors set in move.autopilot -->
          <do_if value="(not @$nextsector or ($nextsector != event.param2.sector)) and (not @$pathsectors.count or not $pathsectors.indexof.{event.param2.sector})">
            <set_value name="$changedsector_newsector" exact="event.param2.sector"/>
            <set_value name="$changedsector_previoussector" exact="event.param.sector" chance="@$debugchance"/>
            <set_value name="$changedsector_reset"/>

            <do_if value="this.ship.isplayerowned">
              <set_known object="event.param" known="true"/>
              <set_known object="event.param2" known="true"/>
              <set_known object="$changedsector_newsector" known="true"/>
              <set_known object="$changedsector_newsector.cluster" known="true"/>

              <!-- pointless. gates and highway gates don't pop up in gravidar. ships and stations are already handled in code. -->
              <!--<find_gravidar_contact name="$changedsector_detected" object="this.ship" docked="false" functional="true" multiple="true">
                <match owner="this.ship.trueowner" negate="true"/>
                <match class="[class.ship, class.station, class.gate, class.highwayentrygate, class.highwayexitgate]"/>
                <match class="class.ship_xs" negate="true"/>
              </find_gravidar_contact>
              <do_all exact="$changedsector_detected.count" counter="$i">
                <set_known object="$changedsector_detected.{$i}" known="true"/>
                <debug_text text="'found %s %s %s.'.[$changedsector_detected.{$i}.class, @$changedsector_detected.{$i}.knownname, $changedsector_detected.{$i}]"/>
              </do_all>
              <remove_value name="$changedsector_detected"/>-->
            </do_if>

            <do_if value="@$debugchance">
              <do_if value="event.name == 'event_object_entered_anomaly'">
                <set_value name="$changedsector_eventstring" exact="'entered an anomaly'"/>
              </do_if>
              <do_elseif value="event.name == 'event_object_entered_gate'">
                <set_value name="$changedsector_eventstring" exact="'entered a gate'"/>
              </do_elseif>
              <do_elseif value="event.name == 'event_object_changed_sector'">
                <set_value name="$changedsector_eventstring" exact="'changed sectors'"/>
              </do_elseif>
              <!--<do_else>
                <debug_text text="'ERROR: %s %s %s changed sectors from %s to %s without having gone through either a gate or an anomaly.'.[this.ship.idcode, this.ship.knownname, this.ship, event.param2.knownname, event.param.knownname]" filter="error"/>
              </do_else>-->

              <debug_text text="'%s %s %s %s from %s to %s.'.[this.ship.idcode, this.ship.knownname, this.ship, @$changedsector_eventstring, $changedsector_previoussector.knownname, $changedsector_newsector.knownname]" chance="@$debugchance"/>
              <remove_value name="$changedsector_eventstring"/>
            </do_if>
            <remove_value name="$changedsector_previoussector"/>
            <remove_value name="$changedsector_newsector"/>

            <do_if value="$changedsector_reset?">
              <remove_value name="$changedsector_reset"/>
              <abort_called_scripts resume="start"/>
            </do_if>
          </do_if>
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>
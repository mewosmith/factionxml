<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="lib.define.blacklistgroup" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <!-- blacklistgroup defines which set of blacklist rules will apply to a particular object if that object does not itself have a specific set of rules.
    groups:
      blacklistgroup.civilian
      blacklistgroup.military

    at the moment, blacklistgroup depends on the purpose of the object rather than the particular behavior so that each specific object will always use the same sets of rules regardless of what it's doing.
    if we later decide to have an object's blacklistgroup depend on behavior, this could either go away or serve as a fallback.

  implemented as an interrupt library so it can be used within init nodes and interrupt actions.
  must not have any blocking actions! -->
  <interrupts>
    <library>
      <actions name="GetBlacklistgroup">
        <!-- loctarget is optional, in case we want to get the blacklistgroup of some arbitrary object. -->
        <do_if value="not $loctarget?">
          <set_value name="$loctarget" exact="this.assignedcontrolled"/>
        </do_if>

        <do_if value="@$loctarget.isoperational">
          <set_value name="$blacklistgroup" exact="blacklistgroup.civilian"/>
          <do_if value="(@$loctarget.primarypurpose == purpose.fight) or (@$loctarget.primarypurpose == purpose.auxiliary)">
            <set_value name="$blacklistgroup" exact="blacklistgroup.military"/>
          </do_if>

          <debug_text text="'%s %s %s %s belongs to blacklist group: %s'.[@$loctarget.class, @$loctarget.idcode, @$loctarget.knownname, $loctarget, $blacklistgroup]" chance="@$debugchance"/>
        </do_if>
        <do_else>
          <debug_text text="'loctarget: %s %s %s %s is invalid or not operational.'.[@$loctarget.class, @$loctarget.idcode, @$loctarget.knownname, @$loctarget]" filter="error"/>
        </do_else>
        <remove_value name="$loctarget"/>
      </actions>
    </library>
  </interrupts>
</aiscript>
<?xml version="1.0" encoding="utf-8"?>
<aiscript name="lib.respond.inspected" priority="9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
  <!-- library script to determine response to being accosted by either police or pirates.
        initially, called as interrupt script from interrupt.inspected -->
  <params>
    <param name="inspector" default="null"/>
    <param name="mode" default="null" comment="'policehalt' or 'piratehalt'"/>
    <param name="debugchance" default="0"/>
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="not $inspector">
        <debug_text text="'no inspector defined. will not respond.'" filter="error"/>
        <return/>
      </do_if>
      <do_elseif value="not $mode">
        <debug_text text="'no mode defined. will not respond.'" filter="error"/>
        <return/>
      </do_elseif>
      <!--
        - if player-owned:
          + send interactive notification. convo:
            ++ comply,
            ++ attack,
            ++ flee,
            ++ if can teleport, wait for me.
        - else
          + choose between above three options (+ bail? + come quietly? for that matter, should player-owned ships always obey?)

        - if comply (default):
          + create immediate Hold Position order for duration of scan (default 30s: set in order.move.recon)
        - if not comply:
          + either:
            ++ create immediate Attack order,
            ++ or create immediate Flee order.
        - if wait:
          + create immediate Hold Position order (to be cancelled when player takes control)
          + scanning ship also waits (timeout, then loop back to label: scan)
      -->

      <!-- maxwaitduration applies to the interdicting ship and to this ship if player-owned ship is interdicted and player selects 'wait'. -->
      <set_value name="$maxwaitduration" exact="1min"/>

      <do_if value="this.isplayerowned">
        <do_if value="$mode == 'policehalt'">
          <set_value name="$title" exact="{1036, 111}" comment="Police Interdiction"/>
          <set_value name="$text" exact="{1036, 113}.[this.assignedcontrolled.name, this.assignedcontrolled.idcode, @this.assignedcontrolled.sector.name, $inspector.owner.name]" comment="%s(ship name) %s(ship ID code) in %s(sector name)\nOrdered by %s(faction name) police to stop and be inspected."/>
          <set_value name="$caption" exact="{1015, 264} + ' - %s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]" comment="Inspected by police"/>
          <set_value name="$line" exact="11211" comment="My ship is being scanned."/>
          <!--<show_notification text="'Police Interdiction\n%s %s here:\nWe are being asked to stop to be scanned by %s.\nWhat should we do?'.[this.ship.idcode, this.ship.name, $inspector.name]" timeout="10s" priority="8"/>-->

          <!-- INTERACTION: ordered by police to stop and be inspected. (interaction trigger further below) -->
        </do_if>
        <do_elseif value="$mode == 'piratehalt'">
          <set_value name="$title" exact="{1036, 101}" comment="Pirate Harassment"/>
          <set_value name="$text" exact="{1036, 103}.[this.assignedcontrolled.name, this.assignedcontrolled.idcode, @this.assignedcontrolled.sector.name, $inspector.owner.name, $inspector.name, $inspector.idcode]" comment="%s(ship name) %s(ship ID code) in %s(sector name)\nAccosted by %s(faction name) pirate ship\n%s(ship name) %s(ship ID code)."/>
          <set_value name="$caption" exact="{1015, 265} + ' - %s (%s)'.[this.assignedcontrolled.knownname, this.assignedcontrolled.idcode]" comment="Harassed by pirates"/>
          <set_value name="$line" exact="6001" comment="(informing player)I was asked to drop my cargo."/>
          <!--<show_notification text="'Pirate Harassment\n%s %s here:\nWe were accosted by %s, and are being asked to drop our cargo.\nWhat should we do?'.[this.ship.idcode, this.ship.name, $inspector.name]" timeout="10s" priority="8"/>-->

          <!-- INTERACTION: harassed by pirates (interaction trigger further below) -->
        </do_elseif>
        <do_else>
          <debug_text text="'unhandled mode: %s. handle?'.[$mode]" filter="error"/>
          <return/>
        </do_else>

        <do_if value="this.ship.signal.{$mode}.shouldaskplayer and ($mode == 'piratehalt' or this.inventory.illegalto.{this.zone.policefaction} or this.assignedcontrolled.cargo.illegalto.{this.zone.policefaction})">
          <!-- We are player-owned and will ask the player for instructions. If the player can witness this event, let the police/pirate talk first. -->
          <do_if value="this.attention ge attention.visible and $inspector.pilot.page and this.distanceto.{player.entity} le param.voice.chatter_range_normal">
            <set_value name="$speaking" />
            <do_if value="$mode == 'piratehalt'">
              <set_value name="$speakline" exact="11310" comment="(pirate requesting to drop cargo)" />
            </do_if>
            <do_else>
              <set_value name="$speakline" exact="11202" comment="(ship scan warning - cargo)Please halt. We will be scanning your cargo hold." />
            </do_else>
            <speak actor="$inspector.pilot" recipient="this" line="$speakline" priority="50" />
            <wait exact="6s">
              <interrupt>
                <conditions>
                  <event_speak_finished actor="$inspector.pilot" line="$speakline" />
                </conditions>
              </interrupt>
            </wait>
            <remove_value name="$speakline" />
          </do_if>
          <show_notification text="$title + '\n' + $text" timeout="10s" priority="8"/>
          <assert value="not this.ship.dock" text="'accosted by %s %s %s while docked.'.[$inspector.idcode, $inspector.knownname, $inspector]" break="always"/>

          <run_script name="'player.interaction'" result="$responseresult">
            <param name="Line" value="$line"/>
            <param name="UIText" value="{1015, 35}.[this.ship.idcode, this.ship.name]" comment="Requesting Orders"/>
            <param name="ConversationParam" value="'g_playerownedship_inspected'"/>
            <param name="MaxQueueDelay" value="10s"/>
            <param name="caption" value="$caption"/>
            <param name="debugchance" value="$debugchance"/>
          </run_script>
          <do_if value="@$responseresult.{1} and $responseresult.{2}">
            <set_value name="$response" exact="$responseresult.{1}"/>
            <set_value name="$responsename" exact="$responseresult.{2}"/>
          </do_if>
        </do_if>

        <do_if value="not @$response">
          <set_value name="$response" exact="this.assignedcontrolled.signal.{$mode}.response.id"/>
          <debug_text text="'default response to %s: %s'.[$mode, $response]" chance="$debugchance"/>
        </do_if>
        <do_if value="not @$responsename">
          <set_value name="$responsename" exact="this.assignedcontrolled.signal.{$mode}.response.name"/>
        </do_if>
        <do_if value="$speaking? and ($response == 'comply' or $response == 'attack' or $response == 'flee')">
          <!-- Response came after an interactive event: trigger a usecase for inspector response (but skip if police/pirate ship has already started attacking in the meantime) -->
          <signal_objects object="player.entity" param="'npc_usecase'" param2="table[
                          $name = (if $response == 'comply' then '$InspectCargo_AfterPlayerEvent_Comply' else '$InspectCargo_AfterPlayerEvent_Refuse'),
                          $actors = table[ $Inspector = $inspector.pilot, $Inspected = this, $Pirate = (if $mode == 'piratehalt' then $inspector.pilot else null) ] ]" />
        </do_if>
        <write_to_logbook category="general" title="$title" faction="$inspector.owner" text="$text + '\n' + {1001, 9322} + {1001, 120} + ' ' + $responsename"/>
        <signal_objects object="$inspector" param="'player halt response'" param2="$response" param3="if $response == 'wait' then $maxwaitduration else null"/>
      </do_if>
      <do_else>
        <!-- AI responses:
              player-owned: absolutely stick to defaults since the player can define those.
              POLICE:
                if hostile or carrying something illegal:
                  ATTACK	attack
                  FLEE	  flee
                  COMPLY	comply, might attack or flee
                otherwise:
                  use set default
              PIRATE:
                purpose fight:
                  ATTACK  attack, might flee
                  FLEE    flee
                  COMPLY  flee
                purpose non-fight:
                  ATTACK  flee, might attack
                  FLEE    flee, might attack
                  COMPLY  comply -->
        <do_if value="$mode == 'policehalt'">
          <debug_text text="'police case'" chance="$debugchance"/>
          <set_value name="$response" exact="this.ship.signal.{$mode}.response.id"/>
          <do_if value="this.mayattack.{$inspector} or this.inventory.illegalto.{this.zone.policefaction} or this.ship.cargo.illegalto.{this.zone.policefaction}">
            <debug_text text="'we are either hostile to the police ship, or are carrying something illegal.'" chance="$debugchance"/>
            <do_if value="$response == 'comply'" chance="this.assignedcontrolled.combinedskill">
              <set_value name="$response" exact="'flee'"/>
              <do_if value="this.skill.morale ge 12">
                <set_value name="$response" exact="'attack'"/>
              </do_if>
            </do_if>
          </do_if>
        </do_if>
        <do_elseif value="$mode == 'piratehalt'">
          <set_value name="$response" exact="this.ship.signal.{$mode}.response.id"/>
          <do_if value="this.controlled.primarypurpose == purpose.fight">
            <do_if value="$response != 'attack'">
              <set_value name="$response" exact="'flee'"/>
            </do_if>
            <do_elseif value="this.skill.morale le 6" chance="100 - this.assignedcontrolled.combinedskill">
              <set_value name="$response" exact="'flee'"/>
            </do_elseif>
          </do_if>
          <do_else>
            <do_if value="$response != 'comply'">
              <do_if value="this.race == race.paranid or this.race == race.split" chance="this.assignedcontrolled.combinedskill">
                <set_value name="$response" exact="'attack'"/>
              </do_if>
              <do_else>
                <set_value name="$response" exact="'flee'"/>
              </do_else>
            </do_if>
          </do_else>
        </do_elseif>
        <do_else>
          <debug_text text="'unhandled mode: %s. handle?'.[$mode]" filter="error"/>
        </do_else>
      </do_else>
      <debug_text text="'response: ' + @$response" chance="$debugchance"/>

      <!-- NB: it makes sense to organize below such that response->mode because the attack and flee responses are identical for the two modes we currently have. will probably stay identical for any future modes we add, if any. -->
      <do_if value="@$response">
        <do_if value="$response == 'comply'">
          <do_if value="$mode == 'policehalt'">
            <set_value name="$speakline" exact="6009" comment="Releasing cargo now."/>
            <set_value name="$usecase" exact="'$InspectCargo_Police_Comply_Illegal'" />
            <debug_text text="'decision: complying with police ship. waiting until told to proceed.'" chance="$debugchance"/>
            <drop_illegal_cargo groupname="$cargocrates" object="this.ship" faction="this.zone.policefaction"/>
            <drop_illegal_inventory groupname="$cargocrates" object="this" faction="this.zone.policefaction"/>
            <destroy_group group="$cargocrates" explosion="true"/>
            <create_order id="'WaitForSignal'" object="this.ship" immediate="true" override="true">
              <param name="timeout" value="1h"/>
              <param name="releasesignal" value="['proceed', $inspector]"/>
              <param name="signaller" value="$inspector"/>
              <param name="debugchance" value="$debugchance"/>
            </create_order>
          </do_if>
          <do_elseif value="$mode == 'piratehalt'">
            <set_value name="$speakline" exact="11401" comment="(ordered to drop cargo - under duress)Okay! Take the cargo!"/>
            <set_value name="$usecase" exact="'$InspectCargo_Pirate_Comply'" />
            <!-- drop cargo and run! -->
            <do_all exact="this.controlled.cargo.count" counter="$i">
              <!-- MAINTENANCE: keep synced with order.plunder. this should roughly correspond with what the pirate would want. -->
              <!-- NB: this will not always appease the pirate. they might want more than we drop.
                    and remember, the pirate might be the player. be nice and drop something they can carry. -->
              <set_value name="$evalware" exact="this.controlled.cargo.list.{$i}"/>
              <do_if value="$evalware.averageprice ge ware.medicalsupplies.averageprice and not $evalware.tags.indexof.{tag.minable} and $inspector.cargo.{$evalware}.free">
                <set_value name="$ware" exact="$evalware"/>
                <break/>
              </do_if>
            </do_all>
            <remove_value name="$evalware"/>
            <do_if value="not $ware?">
              <set_value name="$ware" exact="@this.controlled.cargo.random"/>
            </do_if>

            <do_if value="@$ware">
              <debug_text text="'%s %s accosted by pirate %s %s.\ndropping %s %s.\ntotal amount carried: %s\nmorale: %s'.[this.controlled.knownname, this.controlled, $inspector.knownname, $inspector, this.controlled.cargo.{$ware}.count * ((30 - this.skill.morale) / 30.0), $ware.name, this.controlled.cargo.{$ware}.count, this.skill.morale]" chance="$debugchance"/>
              <drop_cargo object="this.controlled" ware="$ware" exact="this.controlled.cargo.{$ware}.count * ((30 - this.skill.morale) / 30.0)"/>
            </do_if>
            <do_else>
              <debug_text text="'told by pirate to drop something but i do not have anything to drop.'" filter="error"/>
            </do_else>

            <do_any>
              <set_value name="$fleemethod" exact="'highway'"/>
              <set_value name="$fleemethod" exact="'dock'"/>
              <set_value name="$fleemethod" exact="'boost'"/>
              <set_value name="$fleemethod" exact="'maneuver'"/>
            </do_any>
            <create_order id="'Flee'" object="this.ship" immediate="true" override="true">
              <param name="method" value="$fleemethod"/>
              <param name="donotdrop" value="true"/>
              <param name="deploydistraction" value="false"/>
              <param name="attacker" value="$inspector"/>
              <param name="debugchance" value="$debugchance"/>
            </create_order>
          </do_elseif>
        </do_if>
        <do_elseif value="$response == 'wait'">
          <debug_text text="'decision: waiting until told to proceed.'" chance="$debugchance"/>
          <create_order id="'Wait'" object="this.ship" immediate="true" override="true">
            <param name="timeout" value="$maxwaitduration"/>
            <param name="debugchance" value="$debugchance"/>
          </create_order>
        </do_elseif>
        <do_elseif value="$response == 'attack' or $response == 'flee'">
          <set_value name="$speakline" exact="5016" comment="(ship ordered to drop cargo / surrender - defiant)I'll do no such thing."/>
          <set_value name="$usecase" exact="if $mode == 'piratehalt' then '$InspectCargo_Pirate_Refuse' else '$InspectCargo_Police_Refuse'" />
          <remove_value name="this.$haltedby"/>
          <do_if value="$response == 'attack'">
            <!-- attack, then flee -->
            <do_if value="$inspector.coverowner">
              <signal_objects object="$inspector" param="'LoseCover'" param2="false"/>
            </do_if>
            <assert value="not $inspector.coverowner" text="'%s %s %s attacking covered target %s %s %s'.[@this.assignedcontrolled.idcode, @this.assignedcontrolled.knownname, this.assignedcontrolled, @$inspector.idcode, @$inspector.knownname, $inspector]"/>
            <debug_text text="'decision: attacking %s %s.'.[$inspector.knownname, $inspector]" chance="$debugchance"/>
            <create_order id="'Attack'" object="this.ship" immediate="true" override="true">
              <param name="primarytarget" value="$inspector"/>
              <param name="internalorder" value="true"/>
              <param name="debugchance" value="$debugchance"/>
            </create_order>
          </do_if>
          <do_elseif value="$response == 'flee'">
            <!-- just flee -->
            <debug_text text="'decision: fleeing from police ship. method: ' + $fleemethod" chance="$debugchance"/>
            <do_any>
              <set_value name="$fleemethod" exact="'highway'"/>
              <set_value name="$fleemethod" exact="'dock'"/>
              <set_value name="$fleemethod" exact="'boost'"/>
              <set_value name="$fleemethod" exact="'maneuver'"/>
            </do_any>
            <create_order id="'Flee'" object="this.ship" immediate="true" override="true">
              <param name="method" value="$fleemethod"/>
              <param name="donotdrop" value="true"/>
              <param name="attacker" value="$inspector"/>
              <param name="debugchance" value="$debugchance"/>
            </create_order>
          </do_elseif>
        </do_elseif>
        <do_else>
          <debug_text text="'unhandled response: %s. handle?'.[$response]" filter="error"/>
        </do_else>
      </do_if>
      <do_else>
        <debug_text text="'no response decided. accoster: %s %s, mode: %s'.[$inspector.knownname, $inspector, $mode]" filter="error"/>
      </do_else>

      <do_if value="$speakline? and $inspector == player.occupiedship">
        <do_if value="player.isinconversation">
          <add_npc_line line="$speakline"/>
        </do_if>
        <do_else>
          <run_script name="'player.interaction'">
            <param name="Line" value="$speakline"/>
            <param name="MaxQueueDelay" value="10s"/>
            <param name="caption" value="$caption"/>
            <param name="interactive" value="false"/>
            <param name="debugchance" value="$debugchance"/>
          </run_script>
        </do_else>
        <remove_value name="$speakline"/>
      </do_if>
      <do_elseif value="$usecase? and not $speaking? and $inspector != player.occupiedship and  this.attention ge attention.visible and $inspector.pilot.page and player.room.isclass.cockpit and this.distanceto.{player.entity} le param.voice.chatter_range_normal">
        <signal_objects object="player.entity" param="'npc_usecase'" param2="table[ $name = $usecase, $actors = table[ $Inspector = $inspector.pilot, $Inspected = this ] ]" />
      </do_elseif>

      <!-- short wait to make sure that the orders are created before this script ends so that it doesn't simply continue the old order script. -->
      <wait exact="1ms"/>
    </actions>
  </attention>
</aiscript>
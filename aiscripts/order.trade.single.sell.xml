<?xml version="1.0" encoding="utf-8"?>
<aiscript name="order.trade.single.sell" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="2">
  <order id="SingleSell" name="{1041, 141}" description="{1041, 142}" category="trade">
    <params>
      <param name="ware" required="true" type="ware" text="{1041, 10145}" comment="Ware to trade. What do we want to sell?">
        <input_param name="cancarry" value="this.ship"/>
      </param>
      <param name="centerpos" type="position" text="{1041, 10085}" default="[this.ship.sector, position.[0, 0, 0]]" comment="Position. Position in a Sector">
        <input_param name="class" value="class.sector"/>
      </param>
      <param name="radius" type="length" default="350km" text="{1041, 10093}" comment="Radius">
        <input_param name="min" value="0m"/>
        <input_param name="max" value="350km"/>
        <input_param name="step" value="1km"/>
      </param>
      <param name="locations" default="[]" type="list" text="{1041, 10049}" advanced="true" comment="Locations. Overrides centerpos and radius. Where do we want to look? Can be a station, a group of stations, a space, or a group of spaces">
        <input_param name="type" value="'object'"/>
        <input_param name="class" value="[class.station, class.cluster, class.sector]"/>
        <input_param name="hasbuyoffer" value="$ware"/>
      </param>
      <param name="maxamount" default="this.ship.cargo.capacity.all" type="number" advanced="true" text="{1041, 10051}" comment="Max amount. How much do we want to sell?">
        <input_param name="startvalue" value="this.ship.cargo.capacity.all"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="this.ship.cargo.capacity.all"/>
        <input_param name="step" value="this.ship.cargo.capacity.all / 10"/>
      </param>
      <param name="minamount" default="0" type="number" advanced="true" text="{1041, 10065}" comment="Min amount. How much do we want to sell?">
        <input_param name="startvalue" value="0"/>
        <input_param name="min" value="0"/>
        <input_param name="max" value="this.ship.cargo.capacity.all"/>
        <input_param name="step" value="this.ship.cargo.capacity.all / 10"/>
      </param>
      <param name="pricethreshold" default="(($ware.averageprice * 101 / 100) / 1Cr)Cr" type="money" text="{1041, 10070}" comment="Min price. At which price is a trade acceptable?">
        <input_param name="startvalue" value="(($ware.averageprice * 101 / 100) / 1Cr)Cr"/>
        <!-- activate the following if we want them to sell at any price by default. -->
        <!--<input_param name="startvalue" value="($ware.minprice / 1Cr)Cr"/>-->
        <input_param name="min" value="0Cr"/>
        <input_param name="max" value="($ware.maxprice / 1Cr)Cr"/>
        <input_param name="step" value="1Cr"/>
        <!-- below will set the slider to 20 steps regardless of what the price range is. -->
        <!--<input_param name="step" value="(($ware.maxprice / 20) / 1Cr)Cr"/>-->
      </param>

      <param name="internalorder" type="bool" default="false" advanced="true" text="{1041, 10159}" comment="Order results from an automated behavior."/>
      <param name="gotrade" type="internal" default="true" comment="Go ahead and trade. If false, will simply return the trade offer that it would have used."/>
      <param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
        <input_param name="truevalue" value="100"/>
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
    <location object="$centerpos.{1}" position="$centerpos.{2}" radius="$radius"/>
  </order>
  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="AttackHandler" />
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler" />
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler" />
  </interrupts>
  <patch sinceversion="1">
    <!-- patched to true since that is safer. if no path is possible, order should be called again with the proper flag set. -->
    <set_value name="$internalorder" exact="this.isplayerowned"/>
  </patch>
  <patch sinceversion="2">
    <set_value name="$gotrade" exact="true"/>
  </patch>
  <attention min="unknown">
    <actions>

      <label name="start"/>

      <do_if value="not $ware">
        <debug_text text="'ERROR: sell script called without ware specified.'"/>
        <return value="false"/>
      </do_if>

      <do_if value="not $locations.count">
        <find_station name="$locations" space="$centerpos.{1}" known="true" multiple="true">
          <match_distance value="$centerpos.{2}" space="$centerpos.{1}" max="$radius"/>
        </find_station>

        <do_if value="not $locations.count">
          <debug_text text="'no stations found within %sm of input position.'.[$radius]" chance="$debugchance"/>
          <return value="false"/>
        </do_if>
      </do_if>

      <debug_text text="'Price threshold set to %1. Default threshold: %6. Average price of %2: %3. Min Price: %4. Max Price: %5, Num Stations in range: %7'.[$pricethreshold, $ware, $ware.averageprice, $ware.minprice, $ware.maxprice, (($ware.averageprice)f * 1.01)ct, $locations.count]" chance="$debugchance"/>

      <set_value name="$maxamount" exact="[this.ship.cargo.{$ware}.max, $maxamount].min"/>

      <!-- changed this to a run script so that a buy is done before a sell if buy->sell are set in a pair or a loop. -->
      <run_script name="'order.trade.single'" result="$result">
        <param name="ware" value="$ware"/>
        <param name="locations" value="$locations"/>
        <param name="maxamount" value="$maxamount"/>
        <param name="minamount" value="$minamount"/>
        <param name="pricethreshold" value="$pricethreshold"/>
        <param name="sell" value="true"/>
        <param name="internalorder" value="$internalorder"/>
        <param name="gotrade" value="$gotrade"/>
        <param name="debugchance" value="$debugchance"/>
      </run_script>
      <return value="$result"/>
    </actions>
  </attention>
</aiscript>